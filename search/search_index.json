{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Projectile motion is governed by Newton's laws. The equations of motion for a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) are derived from kinematic equations: Equations of Motion Horizontal displacement: math x(t) = v_0 \\cos(\\theta) t Vertical displacement: math y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 To find the range \\( R \\) , we determine the time of flight \\( T_f \\) : math T_f = \\frac{2 v_0 \\sin(\\theta)}{g} Substituting into the horizontal displacement: math R = \\frac{v_0^2 \\sin(2\\theta)}{g} 2. Analysis of the Range The maximum range occurs at \\( \\theta = 45^\\circ \\) , yielding: math R_{\\max} = \\frac{v_0^2}{g} Gravity Influence: Lower gravity increases range (e.g., Moon vs. Earth). Velocity Impact: Higher velocity increases range quadratically. 3. Practical Applications Sports: Ball trajectories in football and golf. Engineering: Optimizing projectile launch angles. Astrophysics: Calculating satellite orbits and probes. 4. Implementation The following Python script simulates projectile range across different angles, velocities, and gravity values. import numpy as np import matplotlib.pyplot as plt import pygame import math def projectile_range(theta, v0, g=9.81): \"\"\"Computes the range of a projectile given initial velocity and launch angle.\"\"\" theta_rad = np.radians(theta) return (v0 ** 2 * np.sin(2 * theta_rad)) / g # Simulation parameters angles = np.linspace(0, 90, 100) v0_values = [10, 20, 30] # Different initial velocities g_values = [9.81, 1.62, 24.79] # Earth, Moon, Jupiter # Plot results plt.figure(figsize=(10, 6)) for v0 in v0_values: ranges = [projectile_range(theta, v0) for theta in angles] plt.plot(angles, ranges, label=f'v0 = {v0} m/s (Earth)') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range as a Function of Angle') plt.legend() plt.grid() plt.show() # Live Interactive Simulation with Pygame def live_simulation(): pygame.init() screen = pygame.display.set_mode((800, 600)) pygame.display.set_caption(\"Interactive Projectile Motion\") clock = pygame.time.Clock() font = pygame.font.Font(None, 36) v0 = 50 # Initial velocity angle = 45 # Launch angle in degrees g = 9.81 # Gravity dt = 0.1 # Time step running = True while running: screen.fill((0, 0, 0)) for event in pygame.event.get(): if event.type == pygame.QUIT: running = False elif event.type == pygame.KEYDOWN: if event.key == pygame.K_UP: angle = min(angle + 5, 90) elif event.key == pygame.K_DOWN: angle = max(angle - 5, 0) elif event.key == pygame.K_RIGHT: v0 += 5 elif event.key == pygame.K_LEFT: v0 = max(v0 - 5, 5) x, y = 50, 500 # Initial position vx = v0 * math.cos(math.radians(angle)) vy = -v0 * math.sin(math.radians(angle)) while y < 500: pygame.draw.circle(screen, (255, 0, 0), (int(x), int(y)), 5) pygame.display.flip() x += vx * dt vy += g * dt y += vy * dt clock.tick(60) angle_text = font.render(f\"Angle: {angle}\u00b0\", True, (255, 255, 255)) v0_text = font.render(f\"Velocity: {v0} m/s\", True, (255, 255, 255)) screen.blit(angle_text, (10, 10)) screen.blit(v0_text, (10, 40)) pygame.display.flip() pygame.quit() if __name__ == \"__main__\": live_simulation() 5. Limitations and Future Work No Air Resistance: Real-world projectiles experience drag. Uneven Terrain: Actual launch sites may not be level. Wind Effects: Wind can significantly alter trajectories. Future Enhancements Incorporate drag and wind resistance. Extend to 3D simulations with varying wind conditions. Use numerical methods like Runge-Kutta for complex cases.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion is governed by Newton's laws. The equations of motion for a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) are derived from kinematic equations:","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"Horizontal displacement: math x(t) = v_0 \\cos(\\theta) t Vertical displacement: math y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 To find the range \\( R \\) , we determine the time of flight \\( T_f \\) : math T_f = \\frac{2 v_0 \\sin(\\theta)}{g} Substituting into the horizontal displacement: math R = \\frac{v_0^2 \\sin(2\\theta)}{g}","title":"Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"The maximum range occurs at \\( \\theta = 45^\\circ \\) , yielding: math R_{\\max} = \\frac{v_0^2}{g} Gravity Influence: Lower gravity increases range (e.g., Moon vs. Earth). Velocity Impact: Higher velocity increases range quadratically.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Sports: Ball trajectories in football and golf. Engineering: Optimizing projectile launch angles. Astrophysics: Calculating satellite orbits and probes.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"The following Python script simulates projectile range across different angles, velocities, and gravity values. import numpy as np import matplotlib.pyplot as plt import pygame import math def projectile_range(theta, v0, g=9.81): \"\"\"Computes the range of a projectile given initial velocity and launch angle.\"\"\" theta_rad = np.radians(theta) return (v0 ** 2 * np.sin(2 * theta_rad)) / g # Simulation parameters angles = np.linspace(0, 90, 100) v0_values = [10, 20, 30] # Different initial velocities g_values = [9.81, 1.62, 24.79] # Earth, Moon, Jupiter # Plot results plt.figure(figsize=(10, 6)) for v0 in v0_values: ranges = [projectile_range(theta, v0) for theta in angles] plt.plot(angles, ranges, label=f'v0 = {v0} m/s (Earth)') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range as a Function of Angle') plt.legend() plt.grid() plt.show() # Live Interactive Simulation with Pygame def live_simulation(): pygame.init() screen = pygame.display.set_mode((800, 600)) pygame.display.set_caption(\"Interactive Projectile Motion\") clock = pygame.time.Clock() font = pygame.font.Font(None, 36) v0 = 50 # Initial velocity angle = 45 # Launch angle in degrees g = 9.81 # Gravity dt = 0.1 # Time step running = True while running: screen.fill((0, 0, 0)) for event in pygame.event.get(): if event.type == pygame.QUIT: running = False elif event.type == pygame.KEYDOWN: if event.key == pygame.K_UP: angle = min(angle + 5, 90) elif event.key == pygame.K_DOWN: angle = max(angle - 5, 0) elif event.key == pygame.K_RIGHT: v0 += 5 elif event.key == pygame.K_LEFT: v0 = max(v0 - 5, 5) x, y = 50, 500 # Initial position vx = v0 * math.cos(math.radians(angle)) vy = -v0 * math.sin(math.radians(angle)) while y < 500: pygame.draw.circle(screen, (255, 0, 0), (int(x), int(y)), 5) pygame.display.flip() x += vx * dt vy += g * dt y += vy * dt clock.tick(60) angle_text = font.render(f\"Angle: {angle}\u00b0\", True, (255, 255, 255)) v0_text = font.render(f\"Velocity: {v0} m/s\", True, (255, 255, 255)) screen.blit(angle_text, (10, 10)) screen.blit(v0_text, (10, 40)) pygame.display.flip() pygame.quit() if __name__ == \"__main__\": live_simulation()","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-limitations-and-future-work","text":"No Air Resistance: Real-world projectiles experience drag. Uneven Terrain: Actual launch sites may not be level. Wind Effects: Wind can significantly alter trajectories.","title":"5. Limitations and Future Work"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#future-enhancements","text":"Incorporate drag and wind resistance. Extend to 3D simulations with varying wind conditions. Use numerical methods like Runge-Kutta for complex cases.","title":"Future Enhancements"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}