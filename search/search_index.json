{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Motivation Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket. Theoretical Foundation Derive the governing equations of projectile motion from fundamental principles. Present the general form of the motion by solving basic differential equations. Highlight how variations in initial conditions lead to a family of solutions. Analysis of the Range Investigate how the horizontal range depends on the angle of projection. Discuss how changes in parameters such as initial velocity and gravitational acceleration affect the outcome. Practical Applications Explore how this model applies to real-world scenarios, including uneven terrain and air resistance. Reflect on how various modifications allow the model to describe more complex trajectories. Implementation Develop a computational tool or algorithm to simulate projectile motion. Visualize the range as a function of the angle of projection for different sets of initial conditions. Deliverables A Markdown document including a Python script or notebook implementing the simulations. A detailed explanation of the family of solutions derived from the governing equations. Graphs illustrating the relationship between range and angle, emphasizing how different parameters influence the curve. A discussion about the limitations of the idealized model and possible improvements by considering realistic factors like air drag or wind. Hints and Resources Start from the fundamental laws of motion to build your solution step-by-step. Use numerical methods or simulations to analyze complex cases beyond analytical scope. Connect this model to practical fields such as sports physics, engineering, and astrophysics. This assignment encourages a deep understanding of projectile motion while showcasing its versatility and real-world applicability. Solution Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Projectile motion is governed by Newton's laws. The equations of motion for a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) are derived from kinematic equations: Differential Equation of Motion The motion of a projectile is governed by the second-order differential equations: $$ \\frac{d^2x}{dt^2} = 0, \\quad \\frac{d^2y}{dt^2} = -g $$ Integrating once: $$ \\frac{dx}{dt} = v_0 \\cos(\\theta), \\quad \\frac{dy}{dt} = v_0 \\sin(\\theta) - g t $$ Integrating again: $$ x(t) = v_0 \\cos(\\theta) t, \\quad y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ Equations of Motion Horizontal displacement: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical displacement: $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ To find the range \\( R \\) , we determine the time of flight \\( T_f \\) : $$ T_f = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Substituting into the horizontal displacement: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ 2. Analysis of the Range The maximum range occurs at \\( \\theta = 45^\\circ \\) , yielding: $$ R_{\\max} = \\frac{v_0^2}{g} $$ Why is \\( 45^\\circ \\) the optimal angle? The range formula for projectile motion (neglecting air resistance) is: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ The sine function reaches its maximum value when \\( 2\\theta = 90^\\circ \\) , meaning: $$ \\theta = 45^\\circ $$ At this angle, the horizontal velocity and vertical velocity are balanced, maximizing the distance traveled. Representations: Gravity Influence: Lower gravity increases range (e.g., Moon vs. Earth). Velocity Impact: Higher velocity increases range quadratically. 3. Practical Applications Projectile motion has a wide range of practical applications across various fields. Understanding the principles behind projectile trajectories allows for better planning, optimization, and decision-making. Here are some key areas where these concepts are applied: 3.1 Sports In sports such as football, basketball, and golf, the trajectory of balls is often analyzed to improve player performance and strategy. Understanding how different angles and speeds affect the distance and trajectory of a ball can help athletes optimize their throws, kicks, and swings. Coaches and players can use this information to improve accuracy and maximize the effectiveness of their plays. Football : The trajectory of a football when kicked for a field goal or a punt is a classic example of projectile motion. The optimal launch angle and velocity for achieving maximum distance and accuracy are essential. Golf : In golf, golfers use their knowledge of projectile motion to determine the ideal angle for hitting the ball to achieve maximum distance and ensure it lands where they want. Basketball : The angle at which a basketball is thrown affects the likelihood of it going through the hoop. Understanding projectile motion helps players optimize their shooting angles and force for better accuracy. 3.2 Engineering Projectile motion principles are also applied in engineering, especially in the design and optimization of systems involving the launch or movement of objects. Engineers working in fields like aerospace, mechanical, and civil engineering must understand how objects travel through air or space. Ballistics Engineering : Ballistics engineers use these principles to design and test the trajectories of projectiles such as missiles and bombs. Understanding the physics behind projectile motion ensures the effectiveness and precision of weapons. Aerospace Engineering : The principles of projectile motion are also fundamental in the design of spacecraft and satellites, particularly when launching probes into orbit. These calculations help engineers predict the trajectory of a spacecraft during its journey, ensuring accurate positioning and minimizing fuel consumption. 3.3 Astrophysics In astrophysics, the study of projectile motion is crucial for calculating the orbits of planets, moons, satellites, and other celestial bodies. Understanding the motion of objects in space allows scientists to predict their movements and plan missions to explore distant regions. Satellite Orbits : The trajectories of satellites around Earth or other planets are determined by applying the principles of projectile motion. Engineers and astrophysicists use these principles to ensure satellites stay in orbit and fulfill their intended functions. Space Probes : Space agencies like NASA rely on precise projectile motion calculations when launching probes to explore planets, moons, and asteroids. Accurate predictions of trajectory and range are essential to ensure that these probes reach their targets, such as Mars or Jupiter's moons, without missing their mark. 4. Implementation The following Python script implements additional simulations: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt from matplotlib.animation import FuncAnimation from IPython.display import HTML def projectile_trajectory(v0, angle, g=9.81, h=0, dt=0.05): angle_rad = np.radians(angle) vx = v0 * np.cos(angle_rad) vy = v0 * np.sin(angle_rad) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt x.append(vx * t) y.append(h + vy * t - 0.5 * g * t**2) return np.array(x), np.array(y) # 1. Three different velocities on the same plot plt.figure(figsize=(8,5)) plt.ylim(0, 60) for v0 in [10, 20, 30]: x, y = projectile_trajectory(v0, 45) plt.plot(x, y, label=f'v0 = {v0} m/s') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion with Different Velocities\") plt.legend() plt.grid() plt.show() # 2. Same initial conditions on three different planets plt.figure(figsize=(8,5)) plt.ylim(0, 60) planets = {\"Earth\": 9.81, \"Moon\": 1.62, \"Jupiter\": 24.79} for planet, g in planets.items(): x, y = projectile_trajectory(20, 45, g) plt.plot(x, y, label=planet) plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion on Different Planets\") plt.legend() plt.grid() plt.show() # 3. Different heights plt.figure(figsize=(8,5)) plt.ylim(0, 60) for h in [0, 10, 20]: x, y = projectile_trajectory(20, 45, 9.81, h) plt.plot(x, y, label=f'Height = {h}m') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion with Different Initial Heights\") plt.legend() plt.grid() plt.show() # 4. Air resistance vs. no air resistance plt.figure(figsize=(8,5)) plt.ylim(0, 60) def projectile_with_drag(v0, angle, g=9.81, h=0, dt=0.05, drag_coeff=0.1): angle_rad = np.radians(angle) vx, vy = v0 * np.cos(angle_rad), v0 * np.sin(angle_rad) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt vx -= drag_coeff * vx * dt vy -= (g + drag_coeff * vy) * dt x.append(x[-1] + vx * dt) y.append(y[-1] + vy * dt) return np.array(x), np.array(y) x_no_drag, y_no_drag = projectile_trajectory(20, 45) x_drag, y_drag = projectile_with_drag(20, 45) plt.plot(x_no_drag, y_no_drag, label=\"No Air Resistance\") plt.plot(x_drag, y_drag, linestyle='dashed', label=\"With Air Resistance\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion With and Without Air Resistance\") plt.legend() plt.grid() plt.show() Different Velocities: Different Planets: Different Initial Heights: Difference between with and without air resistance: 5. Limitations and Future Work While the idealized model of projectile motion offers significant insight into the physics of motion under uniform gravity, it inherently excludes numerous real-world influences. To advance the fidelity and applicability of the model, several extensions are proposed. Below is a detailed analysis of the model's key limitations and potential enhancements. 5.1 Simplified Assumptions in the Classical Model The classical projectile motion equations are derived under idealized conditions, assuming: No Air Resistance : The model neglects drag forces, which in reality oppose motion and reduce both range and maximum height. Uniform Terrain : A flat surface is assumed, overlooking how uneven terrain or varying elevations affect both launch and landing dynamics. Constant Gravitational Field : Gravity is considered a constant (typically \\(9.81 \\, m/s^2\\) ), although it slightly varies with altitude and geographic location. These simplifications make the model analytically tractable but limit its realism, especially for high-speed or long-range projectiles. \ud83d\udd2c Simulation: Ideal Projectile Motion The Python code below simulates projectile motion under these simplified assumptions. It compares three different launch angles (30\u00b0, 45\u00b0, 60\u00b0) with a fixed initial velocity, assuming: No drag Flat ground Constant gravitational acceleration \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) angles = [30, 45, 60] # degrees v0 = 25 # initial velocity (m/s) # Function to calculate ideal projectile motion def projectile_ideal(v0, angle_deg): angle_rad = np.radians(angle_deg) t_flight = 2 * v0 * np.sin(angle_rad) / g t = np.linspace(0, t_flight, num=200) x = v0 * np.cos(angle_rad) * t y = v0 * np.sin(angle_rad) * t - 0.5 * g * t**2 return x, y # Plotting plt.figure(figsize=(10, 5)) for angle in angles: x, y = projectile_ideal(v0, angle) plt.plot(x, y, label=f\"{angle}\u00b0\") plt.title(\"Idealized Projectile Motion (No Air Resistance, Flat Terrain, Constant Gravity)\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.legend(title=\"Launch Angle\") plt.grid(True) plt.tight_layout() plt.show() This visualization highlights the elegant parabolic nature of projectile trajectories in an idealized setting, laying the groundwork for deeper models that include real-world complexity. 5.2 Modeling Air Resistance and Drag Forces One of the most significant oversights in the classical model is the exclusion of air resistance . Realistic modeling involves solving differential equations incorporating a drag term: \\[ F_d = \\frac{1}{2} C_d \\rho A v^2 \\] Where: - \\(C_d\\) = Drag coefficient (depends on shape and surface) - \\(\\rho\\) = Air density - \\(A\\) = Cross-sectional area - \\(v\\) = Velocity Future Work: - Implement the drag equation into motion equations. - Analyze how the inclusion of drag alters trajectory curvature and range. \ud83d\udd2c Graphical Comparison Using Python Below is a sample Python snippet that compares ideal vs drag-influenced projectile motion: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Constants g = 9.81 # gravity (m/s^2) v0 = 50 # initial velocity (m/s) theta = 45 # launch angle (degrees) Cd = 0.47 # drag coefficient (sphere) rho = 1.225 # air density (kg/m^3) A = 0.01 # cross-sectional area (m^2) m = 0.145 # mass (kg) # Initial velocities vx0 = v0 * np.cos(np.radians(theta)) vy0 = v0 * np.sin(np.radians(theta)) # System of differential equations def drag_projectile(t, y): vx, vy, x, y_pos = y v = np.sqrt(vx**2 + vy**2) Fd = 0.5 * Cd * rho * A * v**2 ax = -Fd * vx / (m * v) ay = -g - (Fd * vy / (m * v)) return [ax, ay, vx, vy] # Event to stop integration when projectile hits the ground def hit_ground(t, y): return y[3] # y-position hit_ground.terminal = True hit_ground.direction = -1 # Solve with air resistance sol = solve_ivp( drag_projectile, [0, 10], [vx0, vy0, 0, 0], events=hit_ground, max_step=0.01 ) x_drag, y_drag = sol.y[2], sol.y[3] # Ideal trajectory t = np.linspace(0, 2 * vy0 / g, 100) x_ideal = vx0 * t y_ideal = vy0 * t - 0.5 * g * t**2 # Plotting plt.figure(figsize=(10, 5)) plt.plot(x_ideal, y_ideal, label=\"No Drag (Ideal)\", linestyle=\"--\") plt.plot(x_drag, y_drag, label=\"With Air Drag\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.title(\"Projectile Motion: Ideal vs With Air Resistance\") plt.legend() plt.grid(True) plt.tight_layout() plt.show() Conclusion: In conclusion, while the basic model offers a solid foundation for understanding projectile motion, future work should expand the model to account for a broader range of real-world factors. By incorporating air resistance, varying terrain, and other external forces, we can achieve more accurate simulations and predictions, ultimately enhancing applications in fields like aerospace, sports, and environmental science. Further Viewing For a quick and visual summary of projectile motion, watch this short video: \ud83c\udfa5 Physics Made Easy \u2013 Projectile Motion (YouTube)","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"Derive the governing equations of projectile motion from fundamental principles. Present the general form of the motion by solving basic differential equations. Highlight how variations in initial conditions lead to a family of solutions.","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#analysis-of-the-range","text":"Investigate how the horizontal range depends on the angle of projection. Discuss how changes in parameters such as initial velocity and gravitational acceleration affect the outcome.","title":"Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"Explore how this model applies to real-world scenarios, including uneven terrain and air resistance. Reflect on how various modifications allow the model to describe more complex trajectories.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#implementation","text":"Develop a computational tool or algorithm to simulate projectile motion. Visualize the range as a function of the angle of projection for different sets of initial conditions.","title":"Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#deliverables","text":"A Markdown document including a Python script or notebook implementing the simulations. A detailed explanation of the family of solutions derived from the governing equations. Graphs illustrating the relationship between range and angle, emphasizing how different parameters influence the curve. A discussion about the limitations of the idealized model and possible improvements by considering realistic factors like air drag or wind.","title":"Deliverables"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#hints-and-resources","text":"Start from the fundamental laws of motion to build your solution step-by-step. Use numerical methods or simulations to analyze complex cases beyond analytical scope. Connect this model to practical fields such as sports physics, engineering, and astrophysics. This assignment encourages a deep understanding of projectile motion while showcasing its versatility and real-world applicability.","title":"Hints and Resources"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#solution","text":"","title":"Solution"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection_1","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion is governed by Newton's laws. The equations of motion for a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) are derived from kinematic equations:","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#differential-equation-of-motion","text":"The motion of a projectile is governed by the second-order differential equations: $$ \\frac{d^2x}{dt^2} = 0, \\quad \\frac{d^2y}{dt^2} = -g $$ Integrating once: $$ \\frac{dx}{dt} = v_0 \\cos(\\theta), \\quad \\frac{dy}{dt} = v_0 \\sin(\\theta) - g t $$ Integrating again: $$ x(t) = v_0 \\cos(\\theta) t, \\quad y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$","title":"Differential Equation of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"Horizontal displacement: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical displacement: $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ To find the range \\( R \\) , we determine the time of flight \\( T_f \\) : $$ T_f = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Substituting into the horizontal displacement: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$","title":"Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"The maximum range occurs at \\( \\theta = 45^\\circ \\) , yielding: $$ R_{\\max} = \\frac{v_0^2}{g} $$ Why is \\( 45^\\circ \\) the optimal angle? The range formula for projectile motion (neglecting air resistance) is: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ The sine function reaches its maximum value when \\( 2\\theta = 90^\\circ \\) , meaning: $$ \\theta = 45^\\circ $$ At this angle, the horizontal velocity and vertical velocity are balanced, maximizing the distance traveled. Representations: Gravity Influence: Lower gravity increases range (e.g., Moon vs. Earth). Velocity Impact: Higher velocity increases range quadratically.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Projectile motion has a wide range of practical applications across various fields. Understanding the principles behind projectile trajectories allows for better planning, optimization, and decision-making. Here are some key areas where these concepts are applied:","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#31-sports","text":"In sports such as football, basketball, and golf, the trajectory of balls is often analyzed to improve player performance and strategy. Understanding how different angles and speeds affect the distance and trajectory of a ball can help athletes optimize their throws, kicks, and swings. Coaches and players can use this information to improve accuracy and maximize the effectiveness of their plays. Football : The trajectory of a football when kicked for a field goal or a punt is a classic example of projectile motion. The optimal launch angle and velocity for achieving maximum distance and accuracy are essential. Golf : In golf, golfers use their knowledge of projectile motion to determine the ideal angle for hitting the ball to achieve maximum distance and ensure it lands where they want. Basketball : The angle at which a basketball is thrown affects the likelihood of it going through the hoop. Understanding projectile motion helps players optimize their shooting angles and force for better accuracy.","title":"3.1 Sports"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#32-engineering","text":"Projectile motion principles are also applied in engineering, especially in the design and optimization of systems involving the launch or movement of objects. Engineers working in fields like aerospace, mechanical, and civil engineering must understand how objects travel through air or space. Ballistics Engineering : Ballistics engineers use these principles to design and test the trajectories of projectiles such as missiles and bombs. Understanding the physics behind projectile motion ensures the effectiveness and precision of weapons. Aerospace Engineering : The principles of projectile motion are also fundamental in the design of spacecraft and satellites, particularly when launching probes into orbit. These calculations help engineers predict the trajectory of a spacecraft during its journey, ensuring accurate positioning and minimizing fuel consumption.","title":"3.2 Engineering"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#33-astrophysics","text":"In astrophysics, the study of projectile motion is crucial for calculating the orbits of planets, moons, satellites, and other celestial bodies. Understanding the motion of objects in space allows scientists to predict their movements and plan missions to explore distant regions. Satellite Orbits : The trajectories of satellites around Earth or other planets are determined by applying the principles of projectile motion. Engineers and astrophysicists use these principles to ensure satellites stay in orbit and fulfill their intended functions. Space Probes : Space agencies like NASA rely on precise projectile motion calculations when launching probes to explore planets, moons, and asteroids. Accurate predictions of trajectory and range are essential to ensure that these probes reach their targets, such as Mars or Jupiter's moons, without missing their mark.","title":"3.3 Astrophysics"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"The following Python script implements additional simulations: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt from matplotlib.animation import FuncAnimation from IPython.display import HTML def projectile_trajectory(v0, angle, g=9.81, h=0, dt=0.05): angle_rad = np.radians(angle) vx = v0 * np.cos(angle_rad) vy = v0 * np.sin(angle_rad) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt x.append(vx * t) y.append(h + vy * t - 0.5 * g * t**2) return np.array(x), np.array(y) # 1. Three different velocities on the same plot plt.figure(figsize=(8,5)) plt.ylim(0, 60) for v0 in [10, 20, 30]: x, y = projectile_trajectory(v0, 45) plt.plot(x, y, label=f'v0 = {v0} m/s') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion with Different Velocities\") plt.legend() plt.grid() plt.show() # 2. Same initial conditions on three different planets plt.figure(figsize=(8,5)) plt.ylim(0, 60) planets = {\"Earth\": 9.81, \"Moon\": 1.62, \"Jupiter\": 24.79} for planet, g in planets.items(): x, y = projectile_trajectory(20, 45, g) plt.plot(x, y, label=planet) plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion on Different Planets\") plt.legend() plt.grid() plt.show() # 3. Different heights plt.figure(figsize=(8,5)) plt.ylim(0, 60) for h in [0, 10, 20]: x, y = projectile_trajectory(20, 45, 9.81, h) plt.plot(x, y, label=f'Height = {h}m') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion with Different Initial Heights\") plt.legend() plt.grid() plt.show() # 4. Air resistance vs. no air resistance plt.figure(figsize=(8,5)) plt.ylim(0, 60) def projectile_with_drag(v0, angle, g=9.81, h=0, dt=0.05, drag_coeff=0.1): angle_rad = np.radians(angle) vx, vy = v0 * np.cos(angle_rad), v0 * np.sin(angle_rad) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt vx -= drag_coeff * vx * dt vy -= (g + drag_coeff * vy) * dt x.append(x[-1] + vx * dt) y.append(y[-1] + vy * dt) return np.array(x), np.array(y) x_no_drag, y_no_drag = projectile_trajectory(20, 45) x_drag, y_drag = projectile_with_drag(20, 45) plt.plot(x_no_drag, y_no_drag, label=\"No Air Resistance\") plt.plot(x_drag, y_drag, linestyle='dashed', label=\"With Air Resistance\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion With and Without Air Resistance\") plt.legend() plt.grid() plt.show()","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#different-velocities","text":"","title":"Different Velocities:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#different-planets","text":"","title":"Different Planets:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#different-initial-heights","text":"","title":"Different Initial Heights:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#difference-between-with-and-without-air-resistance","text":"","title":"Difference between with and without air resistance:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-limitations-and-future-work","text":"While the idealized model of projectile motion offers significant insight into the physics of motion under uniform gravity, it inherently excludes numerous real-world influences. To advance the fidelity and applicability of the model, several extensions are proposed. Below is a detailed analysis of the model's key limitations and potential enhancements.","title":"5. Limitations and Future Work"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#51-simplified-assumptions-in-the-classical-model","text":"The classical projectile motion equations are derived under idealized conditions, assuming: No Air Resistance : The model neglects drag forces, which in reality oppose motion and reduce both range and maximum height. Uniform Terrain : A flat surface is assumed, overlooking how uneven terrain or varying elevations affect both launch and landing dynamics. Constant Gravitational Field : Gravity is considered a constant (typically \\(9.81 \\, m/s^2\\) ), although it slightly varies with altitude and geographic location. These simplifications make the model analytically tractable but limit its realism, especially for high-speed or long-range projectiles.","title":"5.1 Simplified Assumptions in the Classical Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#simulation-ideal-projectile-motion","text":"The Python code below simulates projectile motion under these simplified assumptions. It compares three different launch angles (30\u00b0, 45\u00b0, 60\u00b0) with a fixed initial velocity, assuming: No drag Flat ground Constant gravitational acceleration \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) angles = [30, 45, 60] # degrees v0 = 25 # initial velocity (m/s) # Function to calculate ideal projectile motion def projectile_ideal(v0, angle_deg): angle_rad = np.radians(angle_deg) t_flight = 2 * v0 * np.sin(angle_rad) / g t = np.linspace(0, t_flight, num=200) x = v0 * np.cos(angle_rad) * t y = v0 * np.sin(angle_rad) * t - 0.5 * g * t**2 return x, y # Plotting plt.figure(figsize=(10, 5)) for angle in angles: x, y = projectile_ideal(v0, angle) plt.plot(x, y, label=f\"{angle}\u00b0\") plt.title(\"Idealized Projectile Motion (No Air Resistance, Flat Terrain, Constant Gravity)\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.legend(title=\"Launch Angle\") plt.grid(True) plt.tight_layout() plt.show() This visualization highlights the elegant parabolic nature of projectile trajectories in an idealized setting, laying the groundwork for deeper models that include real-world complexity.","title":"\ud83d\udd2c Simulation: Ideal Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#52-modeling-air-resistance-and-drag-forces","text":"One of the most significant oversights in the classical model is the exclusion of air resistance . Realistic modeling involves solving differential equations incorporating a drag term: \\[ F_d = \\frac{1}{2} C_d \\rho A v^2 \\] Where: - \\(C_d\\) = Drag coefficient (depends on shape and surface) - \\(\\rho\\) = Air density - \\(A\\) = Cross-sectional area - \\(v\\) = Velocity Future Work: - Implement the drag equation into motion equations. - Analyze how the inclusion of drag alters trajectory curvature and range.","title":"5.2 Modeling Air Resistance and Drag Forces"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graphical-comparison-using-python","text":"Below is a sample Python snippet that compares ideal vs drag-influenced projectile motion: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Constants g = 9.81 # gravity (m/s^2) v0 = 50 # initial velocity (m/s) theta = 45 # launch angle (degrees) Cd = 0.47 # drag coefficient (sphere) rho = 1.225 # air density (kg/m^3) A = 0.01 # cross-sectional area (m^2) m = 0.145 # mass (kg) # Initial velocities vx0 = v0 * np.cos(np.radians(theta)) vy0 = v0 * np.sin(np.radians(theta)) # System of differential equations def drag_projectile(t, y): vx, vy, x, y_pos = y v = np.sqrt(vx**2 + vy**2) Fd = 0.5 * Cd * rho * A * v**2 ax = -Fd * vx / (m * v) ay = -g - (Fd * vy / (m * v)) return [ax, ay, vx, vy] # Event to stop integration when projectile hits the ground def hit_ground(t, y): return y[3] # y-position hit_ground.terminal = True hit_ground.direction = -1 # Solve with air resistance sol = solve_ivp( drag_projectile, [0, 10], [vx0, vy0, 0, 0], events=hit_ground, max_step=0.01 ) x_drag, y_drag = sol.y[2], sol.y[3] # Ideal trajectory t = np.linspace(0, 2 * vy0 / g, 100) x_ideal = vx0 * t y_ideal = vy0 * t - 0.5 * g * t**2 # Plotting plt.figure(figsize=(10, 5)) plt.plot(x_ideal, y_ideal, label=\"No Drag (Ideal)\", linestyle=\"--\") plt.plot(x_drag, y_drag, label=\"With Air Drag\") plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.title(\"Projectile Motion: Ideal vs With Air Resistance\") plt.legend() plt.grid(True) plt.tight_layout() plt.show()","title":"\ud83d\udd2c Graphical Comparison Using Python"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"In conclusion, while the basic model offers a solid foundation for understanding projectile motion, future work should expand the model to account for a broader range of real-world factors. By incorporating air resistance, varying terrain, and other external forces, we can achieve more accurate simulations and predictions, ultimately enhancing applications in fields like aerospace, sports, and environmental science.","title":"Conclusion:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#further-viewing","text":"For a quick and visual summary of projectile motion, watch this short video: \ud83c\udfa5 Physics Made Easy \u2013 Projectile Motion (YouTube)","title":"Further Viewing"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum is a captivating and powerful model in nonlinear dynamics. It exemplifies how the addition of damping and periodic driving can transform a system from simple harmonic motion into exhibiting rich and sometimes chaotic behavior. These dynamics are not only fascinating from a theoretical perspective but also deeply relevant in engineering, environmental science, and even biology. By varying the amplitude and frequency of the external force, one can observe synchronized motion, bifurcations, chaos, and resonance. These transitions give rise to a wide array of applications, such as energy harvesting, vibration isolation systems, and structural engineering solutions. Solution 1. Theoretical Foundation Governing Equation The motion of a forced damped pendulum is governed by: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] Where: Symbol Description \\(\\theta(t)\\) Angular displacement \\(\\gamma\\) Damping coefficient \\(g\\) Gravitational acceleration \\(L\\) Length of the pendulum \\(A\\) Amplitude of the driving force \\(\\omega\\) Frequency of the driving force This linear non-homogeneous equation allows a solution composed of two parts: Transient : Decaying oscillations due to damping Steady-state : Driven oscillations at the frequency \\(\\omega\\) Resonance Condition Resonance occurs when the driving frequency \\(\\omega\\) approaches the system's natural frequency: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] At resonance, the pendulum experiences the maximum energy transfer from the driving force. 2. Analysis of Dynamics We examine the effect of three primary parameters: Damping ( \\(\\gamma\\) ) Low: Sustained oscillations High: Rapid energy dissipation Driving Amplitude ( \\(A\\) ) Low: Regular motion High: Chaotic transitions Driving Frequency ( \\(\\omega\\) ) $\\omega \\approx\\omega_0 $: Resonance \\(\\omega \\neq \\omega_0\\) : Sub-harmonic, quasiperiodic, or chaotic motion At certain parameter combinations, the pendulum displays chaotic motion \u2014highly sensitive to initial conditions and unpredictable over long time intervals. 3. Practical Applications Energy Harvesting : Vibrational energy can be converted into electrical energy using piezoelectric materials and pendulum dynamics. Suspension Bridges : Proper damping prevents failures like the Tacoma Narrows Bridge collapse. RLC Circuits : These circuits behave analogously to mechanical pendula and are essential in electronics. 4. Implementation: Python Simulation The following code includes independent simulations for each pendulum scenario. Each block shows: Angle vs Time Phase Portrait (Angle vs Angular Velocity) Model setup used in all cases: import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def pendulum_model(t, y, gamma, omega0, A, omega): theta, omega1 = y dtheta_dt = omega1 domega_dt = -gamma * omega1 - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] omega0 = 1.5 t_span = [0, 50] t_eval = np.linspace(*t_span, 2000) initial_state = [0.1, 0] Pure Pendulum (No Damping, No Forcing) Damped Pendulum (No Forcing) Forced Pendulum (No Damping) Forced Damped Pendulum - Resonance Forced Damped Pendulum - Chaotic Graphical Analysis Phase Portrait Poincar\u00e9 Section Bifurcation Diagram (Driving Amplitude) Google Colab You can run this simulation interactively here: \u25b6 Launch Google Colab Simulation Conclusion The forced damped pendulum illustrates how simple mechanical systems can transition from order to chaos. Through theoretical models and numerical experiments, we gain deep insight into resonance, energy transfer, and complex behavior\u2014insights that impact real systems in engineering, electronics, and the natural world.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum is a captivating and powerful model in nonlinear dynamics. It exemplifies how the addition of damping and periodic driving can transform a system from simple harmonic motion into exhibiting rich and sometimes chaotic behavior. These dynamics are not only fascinating from a theoretical perspective but also deeply relevant in engineering, environmental science, and even biology. By varying the amplitude and frequency of the external force, one can observe synchronized motion, bifurcations, chaos, and resonance. These transitions give rise to a wide array of applications, such as energy harvesting, vibration isolation systems, and structural engineering solutions.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solution","text":"","title":"Solution"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped pendulum is governed by: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] Where: Symbol Description \\(\\theta(t)\\) Angular displacement \\(\\gamma\\) Damping coefficient \\(g\\) Gravitational acceleration \\(L\\) Length of the pendulum \\(A\\) Amplitude of the driving force \\(\\omega\\) Frequency of the driving force This linear non-homogeneous equation allows a solution composed of two parts: Transient : Decaying oscillations due to damping Steady-state : Driven oscillations at the frequency \\(\\omega\\)","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-condition","text":"Resonance occurs when the driving frequency \\(\\omega\\) approaches the system's natural frequency: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] At resonance, the pendulum experiences the maximum energy transfer from the driving force.","title":"Resonance Condition"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"We examine the effect of three primary parameters: Damping ( \\(\\gamma\\) ) Low: Sustained oscillations High: Rapid energy dissipation Driving Amplitude ( \\(A\\) ) Low: Regular motion High: Chaotic transitions Driving Frequency ( \\(\\omega\\) ) $\\omega \\approx\\omega_0 $: Resonance \\(\\omega \\neq \\omega_0\\) : Sub-harmonic, quasiperiodic, or chaotic motion At certain parameter combinations, the pendulum displays chaotic motion \u2014highly sensitive to initial conditions and unpredictable over long time intervals.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting : Vibrational energy can be converted into electrical energy using piezoelectric materials and pendulum dynamics. Suspension Bridges : Proper damping prevents failures like the Tacoma Narrows Bridge collapse. RLC Circuits : These circuits behave analogously to mechanical pendula and are essential in electronics.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation-python-simulation","text":"The following code includes independent simulations for each pendulum scenario. Each block shows: Angle vs Time Phase Portrait (Angle vs Angular Velocity) Model setup used in all cases: import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def pendulum_model(t, y, gamma, omega0, A, omega): theta, omega1 = y dtheta_dt = omega1 domega_dt = -gamma * omega1 - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] omega0 = 1.5 t_span = [0, 50] t_eval = np.linspace(*t_span, 2000) initial_state = [0.1, 0]","title":"4. Implementation: Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#pure-pendulum-no-damping-no-forcing","text":"","title":"Pure Pendulum (No Damping, No Forcing)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#damped-pendulum-no-forcing","text":"","title":"Damped Pendulum (No Forcing)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-pendulum-no-damping","text":"","title":"Forced Pendulum (No Damping)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-damped-pendulum-resonance","text":"","title":"Forced Damped Pendulum - Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-damped-pendulum-chaotic","text":"","title":"Forced Damped Pendulum - Chaotic"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#graphical-analysis","text":"","title":"Graphical Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-portrait","text":"","title":"Phase Portrait"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section","text":"","title":"Poincar\u00e9 Section"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#bifurcation-diagram-driving-amplitude","text":"","title":"Bifurcation Diagram (Driving Amplitude)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#google-colab","text":"You can run this simulation interactively here: \u25b6 Launch Google Colab Simulation","title":"Google Colab"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#conclusion","text":"The forced damped pendulum illustrates how simple mechanical systems can transition from order to chaos. Through theoretical models and numerical experiments, we gain deep insight into resonance, energy transfer, and complex behavior\u2014insights that impact real systems in engineering, electronics, and the natural world.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius \u2013 Exploring Kepler\u2019s Third Law and Beyond Motivation The motion of celestial bodies is governed by a balance of gravitational attraction and inertial motion. One of the most powerful tools to analyze these motions is Kepler\u2019s Third Law , which links the orbital period of a body to its orbital radius. Originally derived from planetary observations, this law has since been grounded in Newtonian mechanics and generalized to all two-body orbital systems. Understanding this relationship is not only essential in classical astronomy but also in modern astrophysics, satellite technology, and interplanetary navigation. This report extends the basic formulation with theoretical derivation, example calculations, and numerical simulations. 1. Theoretical Foundation 1.1 Full Derivation of Kepler\u2019s Third Law (T\u00b2 Formula) In a circular orbit, the gravitational force between two bodies provides the required centripetal force: \\[ F = \\frac{G M m}{r^2} \\] This provides the centripetal force for circular motion: \\[ F = m \\frac{v^2}{r} \\] Equating the two: \\[ \\frac{G M m}{r^2} = m \\frac{v^2}{r} \\Rightarrow v^2 = \\frac{G M}{r} \\] The orbital period is: \\[ T = \\frac{2\\pi r}{v} = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\Rightarrow T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This is the generalized form of Kepler\u2019s Third Law . Constants and Units \\(G = 6.674 \\times 10^{-11} \\, m^3 kg^{-1} s^{-2}\\) \u2014 Gravitational constant \\(M\\) \u2014 Mass of the central body (e.g., Earth, Sun) \\(r\\) \u2014 Orbital radius from the center of the mass \\(T\\) \u2014 Orbital period \\(v\\) \u2014 Orbital velocity 1.2 Kepler Verification using Planet Data Using: Planet Radius \\(r\\) (m) Period \\(T\\) (s) Mercury \\(5.79 \\times 10^{10}\\) \\(7.6 \\times 10^6\\) Venus \\(1.082 \\times 10^{11}\\) \\(1.94 \\times 10^7\\) Earth \\(1.496 \\times 10^{11}\\) \\(3.16 \\times 10^7\\) Mars \\(2.279 \\times 10^{11}\\) \\(5.94 \\times 10^7\\) The plot confirms a linear relationship between \\(T^2\\) and \\(r^3\\) as expected. 1.3 Using Kepler\u2019s Law to Find Mass of Central Body From the formula: \\[ T^2 = \\frac{4\\pi^2 r^3}{G M} \\Rightarrow M = \\frac{4\\pi^2 r^3}{G T^2} \\] Mass of the Earth Use Moon\u2019s orbit: - \\(r = 3.84 \\times 10^8\\) m - \\(T = 27.3 \\times 24 \\times 3600\\) s \\[ M = \\frac{4\\pi^2 (3.84 \\times 10^8)^3}{6.674 \\times 10^{-11} \\cdot (2.36 \\times 10^6)^2} \\approx 5.97 \\times 10^{24} \\text{ kg} \\] Mass of the Sun Use Earth\u2019s orbit: - \\(r = 1.496 \\times 10^{11}\\) m - \\(T = 365.25 \\times 24 \\times 3600\\) s \\[ M = \\frac{4\\pi^2 (1.496 \\times 10^{11})^3}{6.674 \\times 10^{-11} \\cdot (3.156 \\times 10^7)^2} \\approx 1.989 \\times 10^{30} \\text{ kg} \\] 2. Practical Examples 2.1 Low Earth Orbit Satellite \\(M = 5.972 \\times 10^{24} \\, kg\\) (Earth) \\(r = 6.78 \\times 10^6 \\, m\\) (approx. Earth radius + 400 km) \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\approx 5.3 \\times 10^3 \\, s \\approx 88.3 \\, minutes \\] 2.2 Earth Around the Sun \\(M = 1.989 \\times 10^{30} \\, kg\\) (Sun) \\(r = 1.496 \\times 10^{11} \\, m\\) (1 AU) \\[ T \\approx 2\\pi \\sqrt{\\frac{r^3}{G M}} \\approx 3.16 \\times 10^7 \\, s \\approx 365.25 \\, days \\] 2.3 Mars Orbiting the Sun \\(r = 2.279 \\times 10^{11} \\, m\\) \\[ T_{\\text{Mars}} \\approx 687 \\, days \\] 3. Scientific Implications Planet Detection : Observing a star\u2019s wobble or dimming gives \\(T\\) , inferring \\(r\\) using this law. Mass Estimation : Rearranging the formula gives \\(M\\) based on known \\(T\\) and \\(r\\) . Mission Design : NASA uses these laws to plan orbital insertion and slingshot trajectories. 4. Computational Model We implement a Python simulation to verify this relationship numerically. Python Implementation: Kepler's Third Law Verification You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab 5. Visualizations and Interactive Tools Orbital Animation (circular motion using matplotlib.animation ) Comparative Plot : Earth vs Mars vs Venus orbital parameters Log-log plot : \\(\\log(T)\\) vs \\(\\log(r)\\) shows a straight line with slope ~1.5 6. Conclusion Kepler\u2019s Third Law remains a powerful bridge between classical mechanics and modern astrophysics. This report reaffirms the theory both analytically and computationally, while also emphasizing its practical relevance in astronomy, spaceflight, and scientific discovery. References Kepler, J. (1609). Astronomia Nova Newton, I. (1687). Philosophi\u00e6 Naturalis Principia Mathematica Carroll & Ostlie (2017). An Introduction to Modern Astrophysics","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius-exploring-keplers-third-law-and-beyond","text":"","title":"Orbital Period and Orbital Radius \u2013 Exploring Kepler\u2019s Third Law and Beyond"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation","text":"The motion of celestial bodies is governed by a balance of gravitational attraction and inertial motion. One of the most powerful tools to analyze these motions is Kepler\u2019s Third Law , which links the orbital period of a body to its orbital radius. Originally derived from planetary observations, this law has since been grounded in Newtonian mechanics and generalized to all two-body orbital systems. Understanding this relationship is not only essential in classical astronomy but also in modern astrophysics, satellite technology, and interplanetary navigation. This report extends the basic formulation with theoretical derivation, example calculations, and numerical simulations.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#11-full-derivation-of-keplers-third-law-t2-formula","text":"In a circular orbit, the gravitational force between two bodies provides the required centripetal force: \\[ F = \\frac{G M m}{r^2} \\] This provides the centripetal force for circular motion: \\[ F = m \\frac{v^2}{r} \\] Equating the two: \\[ \\frac{G M m}{r^2} = m \\frac{v^2}{r} \\Rightarrow v^2 = \\frac{G M}{r} \\] The orbital period is: \\[ T = \\frac{2\\pi r}{v} = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\Rightarrow T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This is the generalized form of Kepler\u2019s Third Law .","title":"1.1 Full Derivation of Kepler\u2019s Third Law (T\u00b2 Formula)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#constants-and-units","text":"\\(G = 6.674 \\times 10^{-11} \\, m^3 kg^{-1} s^{-2}\\) \u2014 Gravitational constant \\(M\\) \u2014 Mass of the central body (e.g., Earth, Sun) \\(r\\) \u2014 Orbital radius from the center of the mass \\(T\\) \u2014 Orbital period \\(v\\) \u2014 Orbital velocity","title":"Constants and Units"},{"location":"1%20Physics/2%20Gravity/Problem_1/#12-kepler-verification-using-planet-data","text":"Using: Planet Radius \\(r\\) (m) Period \\(T\\) (s) Mercury \\(5.79 \\times 10^{10}\\) \\(7.6 \\times 10^6\\) Venus \\(1.082 \\times 10^{11}\\) \\(1.94 \\times 10^7\\) Earth \\(1.496 \\times 10^{11}\\) \\(3.16 \\times 10^7\\) Mars \\(2.279 \\times 10^{11}\\) \\(5.94 \\times 10^7\\) The plot confirms a linear relationship between \\(T^2\\) and \\(r^3\\) as expected.","title":"1.2 Kepler Verification using Planet Data"},{"location":"1%20Physics/2%20Gravity/Problem_1/#13-using-keplers-law-to-find-mass-of-central-body","text":"From the formula: \\[ T^2 = \\frac{4\\pi^2 r^3}{G M} \\Rightarrow M = \\frac{4\\pi^2 r^3}{G T^2} \\]","title":"1.3 Using Kepler\u2019s Law to Find Mass of Central Body"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mass-of-the-earth","text":"Use Moon\u2019s orbit: - \\(r = 3.84 \\times 10^8\\) m - \\(T = 27.3 \\times 24 \\times 3600\\) s \\[ M = \\frac{4\\pi^2 (3.84 \\times 10^8)^3}{6.674 \\times 10^{-11} \\cdot (2.36 \\times 10^6)^2} \\approx 5.97 \\times 10^{24} \\text{ kg} \\]","title":"Mass of the Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mass-of-the-sun","text":"Use Earth\u2019s orbit: - \\(r = 1.496 \\times 10^{11}\\) m - \\(T = 365.25 \\times 24 \\times 3600\\) s \\[ M = \\frac{4\\pi^2 (1.496 \\times 10^{11})^3}{6.674 \\times 10^{-11} \\cdot (3.156 \\times 10^7)^2} \\approx 1.989 \\times 10^{30} \\text{ kg} \\]","title":"Mass of the Sun"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-practical-examples","text":"","title":"2. Practical Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#21-low-earth-orbit-satellite","text":"\\(M = 5.972 \\times 10^{24} \\, kg\\) (Earth) \\(r = 6.78 \\times 10^6 \\, m\\) (approx. Earth radius + 400 km) \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\approx 5.3 \\times 10^3 \\, s \\approx 88.3 \\, minutes \\]","title":"2.1 Low Earth Orbit Satellite"},{"location":"1%20Physics/2%20Gravity/Problem_1/#22-earth-around-the-sun","text":"\\(M = 1.989 \\times 10^{30} \\, kg\\) (Sun) \\(r = 1.496 \\times 10^{11} \\, m\\) (1 AU) \\[ T \\approx 2\\pi \\sqrt{\\frac{r^3}{G M}} \\approx 3.16 \\times 10^7 \\, s \\approx 365.25 \\, days \\]","title":"2.2 Earth Around the Sun"},{"location":"1%20Physics/2%20Gravity/Problem_1/#23-mars-orbiting-the-sun","text":"\\(r = 2.279 \\times 10^{11} \\, m\\) \\[ T_{\\text{Mars}} \\approx 687 \\, days \\]","title":"2.3 Mars Orbiting the Sun"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-scientific-implications","text":"Planet Detection : Observing a star\u2019s wobble or dimming gives \\(T\\) , inferring \\(r\\) using this law. Mass Estimation : Rearranging the formula gives \\(M\\) based on known \\(T\\) and \\(r\\) . Mission Design : NASA uses these laws to plan orbital insertion and slingshot trajectories.","title":"3. Scientific Implications"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-computational-model","text":"We implement a Python simulation to verify this relationship numerically.","title":"4. Computational Model"},{"location":"1%20Physics/2%20Gravity/Problem_1/#python-implementation-keplers-third-law-verification","text":"You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"Python Implementation: Kepler's Third Law Verification"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-visualizations-and-interactive-tools","text":"Orbital Animation (circular motion using matplotlib.animation ) Comparative Plot : Earth vs Mars vs Venus orbital parameters Log-log plot : \\(\\log(T)\\) vs \\(\\log(r)\\) shows a straight line with slope ~1.5","title":"5. Visualizations and Interactive Tools"},{"location":"1%20Physics/2%20Gravity/Problem_1/#6-conclusion","text":"Kepler\u2019s Third Law remains a powerful bridge between classical mechanics and modern astrophysics. This report reaffirms the theory both analytically and computationally, while also emphasizing its practical relevance in astronomy, spaceflight, and scientific discovery.","title":"6. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#references","text":"Kepler, J. (1609). Astronomia Nova Newton, I. (1687). Philosophi\u00e6 Naturalis Principia Mathematica Carroll & Ostlie (2017). An Introduction to Modern Astrophysics","title":"References"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 Scientific Exploration of Escape and Cosmic Velocities 1. Introduction In the realm of astrodynamics, the ability to overcome gravitational constraints is described through cosmic velocities . These critical velocities determine the energy needed for orbital insertion, planetary escape, and departure from the solar system. The classification is: First Cosmic Velocity ( \\(v_1\\) ) \u2013 Minimum velocity to remain in circular orbit Second Cosmic Velocity ( \\(v_2\\) ) \u2013 Escape velocity from a celestial body Third Cosmic Velocity ( \\(v_3\\) ) \u2013 Escape velocity from the central star (e.g., the Sun) These are cornerstones for space missions and planetary science, directly influencing mission architecture and propulsion requirements. 2. Theoretical Derivation 2.1 First Cosmic Velocity ( \\(v_1\\) ) Defined by the balance of gravitational and centripetal forces: \\[ \\frac{G M m}{r^2} = m \\frac{v_1^2}{r} \\Rightarrow v_1 = \\sqrt{\\frac{G M}{r}} \\] 2.2 Second Cosmic Velocity ( \\(v_2\\) ) Derived from energy conservation: total mechanical energy equals zero when escaping to infinity. \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\Rightarrow v_2 = \\sqrt{\\frac{2 G M}{r}} \\] 2.3 Third Cosmic Velocity ( \\(v_3\\) ) To leave the gravitational field of both the planet and its host star, assuming launch from the planet: \\[ v_3 = \\sqrt{v_2^2 + v_{\\text{orb}}^2}, \\quad v_{\\text{orb}} = \\sqrt{\\frac{G M_s}{R}} \\] Where: - \\(M_s\\) is the Sun\u2019s mass - \\(R\\) is orbital radius of the planet 3. Numerical Calculations (Earth, Mars, Jupiter) Constants: - \\(G = 6.674 \\times 10^{-11} \\text{ m}^3/\\text{kg} \\cdot \\text{s}^2\\) - \\(M_\\odot = 1.989 \\times 10^{30} \\text{ kg}\\) Earth: \\(M = 5.972 \\times 10^{24}\\) kg \\(r = 6.371 \\times 10^6\\) m \\(R = 1.496 \\times 10^{11}\\) m \\[ v_1 = 7.91 \\text{ km/s},\\quad v_2 = 11.2 \\text{ km/s},\\quad v_3 = 42.1 \\text{ km/s} \\] Mars: \\(M = 6.417 \\times 10^{23}\\) kg \\(r = 3.389 \\times 10^6\\) m \\(R = 2.279 \\times 10^{11}\\) m \\[ v_1 = 3.55 \\text{ km/s},\\quad v_2 = 5.0 \\text{ km/s},\\quad v_3 = 34.1 \\text{ km/s} \\] Jupiter: \\(M = 1.898 \\times 10^{27}\\) kg \\(r = 6.9911 \\times 10^7\\) m \\(R = 7.785 \\times 10^{11}\\) m \\[ v_1 = 42.0 \\text{ km/s},\\quad v_2 = 59.5 \\text{ km/s},\\quad v_3 = 70.3 \\text{ km/s} \\] 4. Python Simulation and Visualization We implement a Python simulation to verify this: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab 5. Applications in Modern Astrophysics Rocket launch phases : Optimize fuel for achieving \\(v_1\\) and \\(v_2\\) Escape planning : Design of escape trajectories for Mars missions Gravity assist : Use \\(v_3\\) targeting and orbital boosts Astrobiology : Analyze which exoplanets can retain atmospheres based on \\(v_2\\) 6. Conclusion Cosmic velocities form the physics backbone of spaceflight. Understanding \\(v_1\\) , \\(v_2\\) , and \\(v_3\\) allows for precise trajectory design, spacecraft staging, and mission profiling. These concepts remain indispensable for both current missions and future interstellar ambitions.","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#scientific-exploration-of-escape-and-cosmic-velocities","text":"","title":"Scientific Exploration of Escape and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#1-introduction","text":"In the realm of astrodynamics, the ability to overcome gravitational constraints is described through cosmic velocities . These critical velocities determine the energy needed for orbital insertion, planetary escape, and departure from the solar system. The classification is: First Cosmic Velocity ( \\(v_1\\) ) \u2013 Minimum velocity to remain in circular orbit Second Cosmic Velocity ( \\(v_2\\) ) \u2013 Escape velocity from a celestial body Third Cosmic Velocity ( \\(v_3\\) ) \u2013 Escape velocity from the central star (e.g., the Sun) These are cornerstones for space missions and planetary science, directly influencing mission architecture and propulsion requirements.","title":"1. Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_2/#2-theoretical-derivation","text":"","title":"2. Theoretical Derivation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#21-first-cosmic-velocity-v_1","text":"Defined by the balance of gravitational and centripetal forces: \\[ \\frac{G M m}{r^2} = m \\frac{v_1^2}{r} \\Rightarrow v_1 = \\sqrt{\\frac{G M}{r}} \\]","title":"2.1 First Cosmic Velocity (\\(v_1\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#22-second-cosmic-velocity-v_2","text":"Derived from energy conservation: total mechanical energy equals zero when escaping to infinity. \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\Rightarrow v_2 = \\sqrt{\\frac{2 G M}{r}} \\]","title":"2.2 Second Cosmic Velocity (\\(v_2\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#23-third-cosmic-velocity-v_3","text":"To leave the gravitational field of both the planet and its host star, assuming launch from the planet: \\[ v_3 = \\sqrt{v_2^2 + v_{\\text{orb}}^2}, \\quad v_{\\text{orb}} = \\sqrt{\\frac{G M_s}{R}} \\] Where: - \\(M_s\\) is the Sun\u2019s mass - \\(R\\) is orbital radius of the planet","title":"2.3 Third Cosmic Velocity (\\(v_3\\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#3-numerical-calculations-earth-mars-jupiter","text":"Constants: - \\(G = 6.674 \\times 10^{-11} \\text{ m}^3/\\text{kg} \\cdot \\text{s}^2\\) - \\(M_\\odot = 1.989 \\times 10^{30} \\text{ kg}\\)","title":"3. Numerical Calculations (Earth, Mars, Jupiter)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#earth","text":"\\(M = 5.972 \\times 10^{24}\\) kg \\(r = 6.371 \\times 10^6\\) m \\(R = 1.496 \\times 10^{11}\\) m \\[ v_1 = 7.91 \\text{ km/s},\\quad v_2 = 11.2 \\text{ km/s},\\quad v_3 = 42.1 \\text{ km/s} \\]","title":"Earth:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#mars","text":"\\(M = 6.417 \\times 10^{23}\\) kg \\(r = 3.389 \\times 10^6\\) m \\(R = 2.279 \\times 10^{11}\\) m \\[ v_1 = 3.55 \\text{ km/s},\\quad v_2 = 5.0 \\text{ km/s},\\quad v_3 = 34.1 \\text{ km/s} \\]","title":"Mars:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#jupiter","text":"\\(M = 1.898 \\times 10^{27}\\) kg \\(r = 6.9911 \\times 10^7\\) m \\(R = 7.785 \\times 10^{11}\\) m \\[ v_1 = 42.0 \\text{ km/s},\\quad v_2 = 59.5 \\text{ km/s},\\quad v_3 = 70.3 \\text{ km/s} \\]","title":"Jupiter:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#4-python-simulation-and-visualization","text":"We implement a Python simulation to verify this: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"4. Python Simulation and Visualization"},{"location":"1%20Physics/2%20Gravity/Problem_2/#5-applications-in-modern-astrophysics","text":"Rocket launch phases : Optimize fuel for achieving \\(v_1\\) and \\(v_2\\) Escape planning : Design of escape trajectories for Mars missions Gravity assist : Use \\(v_3\\) targeting and orbital boosts Astrobiology : Analyze which exoplanets can retain atmospheres based on \\(v_2\\)","title":"5. Applications in Modern Astrophysics"},{"location":"1%20Physics/2%20Gravity/Problem_2/#6-conclusion","text":"Cosmic velocities form the physics backbone of spaceflight. Understanding \\(v_1\\) , \\(v_2\\) , and \\(v_3\\) allows for precise trajectory design, spacecraft staging, and mission profiling. These concepts remain indispensable for both current missions and future interstellar ambitions.","title":"6. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3 Trajectories of a Freely Released Payload Near Earth 1. Introduction When a payload is released from a spacecraft near Earth, its path is no longer dictated by propulsion but solely by gravitational interaction. The resulting trajectory\u2014whether an orbital arc, escape route, or reentry\u2014depends on the initial conditions at the moment of release. This investigation explores the governing dynamics, equations, and possible paths, providing essential context for space engineering and mission design. 2. Gravitational Dynamics and Force Model 2.1 Newton\u2019s Law of Universal Gravitation The gravitational force acting on a payload of mass \\(m\\) near Earth is: \\[ \\vec{F} = -\\frac{G M m}{r^2} \\hat{r} \\] Where: - \\(G = 6.674 \\times 10^{-11} \\, \\text{m}^3/\\text{kg} \\cdot \\text{s}^2\\) \u2014 gravitational constant - \\(M\\) \u2014 mass of the Earth ( \\(5.972 \\times 10^{24} \\text{ kg}\\) ) - \\(r\\) \u2014 distance from Earth\u2019s center - \\(\\hat{r}\\) \u2014 unit vector directed radially from Earth 2.2 Equations of Motion Using Newton\u2019s second law: \\[ m \\vec{a} = -\\frac{G M m}{r^2} \\hat{r} \\Rightarrow \\vec{a} = -\\frac{G M}{r^2} \\hat{r} \\] In Cartesian coordinates: \\[ \\vec{a} = -\\frac{G M}{(x^2 + y^2)^{3/2}} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\] 3. Energy-Based Trajectory Classification The type of path followed by the object is determined by its total mechanical energy: \\[ E = \\frac{1}{2} m v^2 - \\frac{G M m}{r} \\] 3.1 Parabolic (E = 0) The velocity equals the escape velocity: \\[ v = v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r}} \\] 3.2 Elliptical (E < 0) Bound orbit (closed), energy negative: \\[ v = \\sqrt{ G M \\left( \\frac{2}{r} - \\frac{1}{a} \\right) } \\] Where \\(a\\) is the semi-major axis of the ellipse. 3.3 Hyperbolic (E > 0) Escape trajectory, object never returns: \\[ v = \\sqrt{ G M \\left( \\frac{2}{r} + \\frac{1}{|a|} \\right) } \\] Where \\(a\\) is negative for hyperbolic trajectories. 4. Numerical Method \u2013 Runge-Kutta 4th Order The 4th-order Runge-Kutta (RK4) method is used to solve the system: \\[ \\frac{d^2\\vec{r}}{dt^2} = -\\frac{GM}{||\\vec{r}||^3} \\vec{r} \\] Simulating trajectories involves computing the object's position at each time step based on its gravitational acceleration and velocity using RK4. 5. Python Simulation of Parabolic, Elliptical, and Hyperbolic Paths You can run the simulation in Google Colab by clicking the link below: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab 6. Practical Applications Satellite Launch Windows : Ensure payload enters desired orbital path Reentry Dynamics : Calculate trajectories for safe descent and recovery Mission Planning : High-velocity releases determine escape paths for interplanetary transfer 7. Conclusion By integrating Newtonian gravity with energy and velocity constraints, this study provides a complete view of gravitational trajectories. Through numerical simulation, parabolic, elliptical, and hyperbolic dynamics are modeled, showing how initial velocity alone determines the mission outcome.","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#trajectories-of-a-freely-released-payload-near-earth","text":"","title":"Trajectories of a Freely Released Payload Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_3/#1-introduction","text":"When a payload is released from a spacecraft near Earth, its path is no longer dictated by propulsion but solely by gravitational interaction. The resulting trajectory\u2014whether an orbital arc, escape route, or reentry\u2014depends on the initial conditions at the moment of release. This investigation explores the governing dynamics, equations, and possible paths, providing essential context for space engineering and mission design.","title":"1. Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_3/#2-gravitational-dynamics-and-force-model","text":"","title":"2. Gravitational Dynamics and Force Model"},{"location":"1%20Physics/2%20Gravity/Problem_3/#21-newtons-law-of-universal-gravitation","text":"The gravitational force acting on a payload of mass \\(m\\) near Earth is: \\[ \\vec{F} = -\\frac{G M m}{r^2} \\hat{r} \\] Where: - \\(G = 6.674 \\times 10^{-11} \\, \\text{m}^3/\\text{kg} \\cdot \\text{s}^2\\) \u2014 gravitational constant - \\(M\\) \u2014 mass of the Earth ( \\(5.972 \\times 10^{24} \\text{ kg}\\) ) - \\(r\\) \u2014 distance from Earth\u2019s center - \\(\\hat{r}\\) \u2014 unit vector directed radially from Earth","title":"2.1 Newton\u2019s Law of Universal Gravitation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#22-equations-of-motion","text":"Using Newton\u2019s second law: \\[ m \\vec{a} = -\\frac{G M m}{r^2} \\hat{r} \\Rightarrow \\vec{a} = -\\frac{G M}{r^2} \\hat{r} \\] In Cartesian coordinates: \\[ \\vec{a} = -\\frac{G M}{(x^2 + y^2)^{3/2}} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\]","title":"2.2 Equations of Motion"},{"location":"1%20Physics/2%20Gravity/Problem_3/#3-energy-based-trajectory-classification","text":"The type of path followed by the object is determined by its total mechanical energy: \\[ E = \\frac{1}{2} m v^2 - \\frac{G M m}{r} \\]","title":"3. Energy-Based Trajectory Classification"},{"location":"1%20Physics/2%20Gravity/Problem_3/#31-parabolic-e-0","text":"The velocity equals the escape velocity: \\[ v = v_{\\text{esc}} = \\sqrt{\\frac{2 G M}{r}} \\]","title":"3.1 Parabolic (E = 0)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#32-elliptical-e-0","text":"Bound orbit (closed), energy negative: \\[ v = \\sqrt{ G M \\left( \\frac{2}{r} - \\frac{1}{a} \\right) } \\] Where \\(a\\) is the semi-major axis of the ellipse.","title":"3.2 Elliptical (E &lt; 0)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#33-hyperbolic-e-0","text":"Escape trajectory, object never returns: \\[ v = \\sqrt{ G M \\left( \\frac{2}{r} + \\frac{1}{|a|} \\right) } \\] Where \\(a\\) is negative for hyperbolic trajectories.","title":"3.3 Hyperbolic (E &gt; 0)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#4-numerical-method-runge-kutta-4th-order","text":"The 4th-order Runge-Kutta (RK4) method is used to solve the system: \\[ \\frac{d^2\\vec{r}}{dt^2} = -\\frac{GM}{||\\vec{r}||^3} \\vec{r} \\] Simulating trajectories involves computing the object's position at each time step based on its gravitational acceleration and velocity using RK4.","title":"4. Numerical Method \u2013 Runge-Kutta 4th Order"},{"location":"1%20Physics/2%20Gravity/Problem_3/#5-python-simulation-of-parabolic-elliptical-and-hyperbolic-paths","text":"You can run the simulation in Google Colab by clicking the link below: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"5. Python Simulation of Parabolic, Elliptical, and Hyperbolic Paths"},{"location":"1%20Physics/2%20Gravity/Problem_3/#6-practical-applications","text":"Satellite Launch Windows : Ensure payload enters desired orbital path Reentry Dynamics : Calculate trajectories for safe descent and recovery Mission Planning : High-velocity releases determine escape paths for interplanetary transfer","title":"6. Practical Applications"},{"location":"1%20Physics/2%20Gravity/Problem_3/#7-conclusion","text":"By integrating Newtonian gravity with energy and velocity constraints, this study provides a complete view of gravitational trajectories. Through numerical simulation, parabolic, elliptical, and hyperbolic dynamics are modeled, showing how initial velocity alone determines the mission outcome.","title":"7. Conclusion"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1: Interference Patterns on a Water Surface Motivation Wave interference is a fundamental concept in physics, observed in numerous contexts such as water surfaces, optics, acoustics, and quantum mechanics. On a water surface, interference patterns arise when circular waves from multiple sources overlap. These patterns are manifestations of the superposition principle, which states that when two or more waves meet, their displacements add together at each point in space. Understanding interference not only offers insight into basic wave behavior but also lays the groundwork for understanding phenomena like diffraction, standing waves, and coherent wave interactions. Theoretical Background Wave Equation for a Single Source The vertical displacement \\(\\eta(x, y, t)\\) of the water surface at point \\((x, y)\\) due to a point source at \\((x_0, y_0)\\) is modeled by the following expression: \\[ \\eta(x, y, t) = \\frac{A}{\\sqrt{r}} \\cos(kr - \\omega t + \\phi) \\] Where: - \\(A\\) is the amplitude of the wave. - \\(r = \\sqrt{(x - x_0)^2 + (y - y_0)^2}\\) is the distance from the point source. - \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number. - \\(\\omega = 2\\pi f\\) is the angular frequency. - \\(\\phi\\) is the phase offset. Superposition of Multiple Waves The total disturbance due to \\(N\\) sources is given by: \\[ \\eta_{\\text{total}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t) \\] This equation holds for linear, small-amplitude waves where the superposition principle applies. Step-by-Step Solution Step 1: Choose a Regular Polygon We choose a square \u2014 a regular polygon with four equal sides. This symmetric arrangement is ideal for observing rich and predictable interference patterns. Step 2: Position the Sources The point sources are placed at the vertices of a square centered at the origin. If \\(R\\) is the radius of the circumscribed circle, the coordinates are given by: \\[ (x_i, y_i) = (R \\cos \\theta_i, R \\sin \\theta_i),\\quad \\theta_i = \\frac{2\\pi i}{N},\\ i = 0,1,...,N-1 \\] Where \\(R = 1.5\\) and \\(N = 4\\) . Step 3: Python Simulation and Visualization We implement a Python simulation to verify this: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab Interpretation and Analysis Constructive Interference : Regions where wave crests align \u2014 resulting in high amplitude. Destructive Interference : Locations where crests meet troughs \u2014 resulting in cancellation. Symmetry : The square configuration creates symmetric cross-like wavefronts. Wave Nodes and Antinodes : These emerge clearly and represent points of zero and maximum displacement. Real-World Relevance Acoustics : Speaker arrays and concert hall acoustics leverage interference. Optics : Interference explains diffraction and the working of interferometers. Engineering : Structural vibrations and modal patterns are analyzed using interference. Conclusion This simulation confirms the emergence of structured interference patterns from four coherent point sources arranged in a square. The resulting patterns showcase fundamental wave phenomena and help bridge theoretical physics with real-world systems.","title":"Problem 1: Interference Patterns on a Water Surface"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1-interference-patterns-on-a-water-surface","text":"","title":"Problem 1: Interference Patterns on a Water Surface"},{"location":"1%20Physics/3%20Waves/Problem_1/#motivation","text":"Wave interference is a fundamental concept in physics, observed in numerous contexts such as water surfaces, optics, acoustics, and quantum mechanics. On a water surface, interference patterns arise when circular waves from multiple sources overlap. These patterns are manifestations of the superposition principle, which states that when two or more waves meet, their displacements add together at each point in space. Understanding interference not only offers insight into basic wave behavior but also lays the groundwork for understanding phenomena like diffraction, standing waves, and coherent wave interactions.","title":"Motivation"},{"location":"1%20Physics/3%20Waves/Problem_1/#theoretical-background","text":"","title":"Theoretical Background"},{"location":"1%20Physics/3%20Waves/Problem_1/#wave-equation-for-a-single-source","text":"The vertical displacement \\(\\eta(x, y, t)\\) of the water surface at point \\((x, y)\\) due to a point source at \\((x_0, y_0)\\) is modeled by the following expression: \\[ \\eta(x, y, t) = \\frac{A}{\\sqrt{r}} \\cos(kr - \\omega t + \\phi) \\] Where: - \\(A\\) is the amplitude of the wave. - \\(r = \\sqrt{(x - x_0)^2 + (y - y_0)^2}\\) is the distance from the point source. - \\(k = \\frac{2\\pi}{\\lambda}\\) is the wave number. - \\(\\omega = 2\\pi f\\) is the angular frequency. - \\(\\phi\\) is the phase offset.","title":"Wave Equation for a Single Source"},{"location":"1%20Physics/3%20Waves/Problem_1/#superposition-of-multiple-waves","text":"The total disturbance due to \\(N\\) sources is given by: \\[ \\eta_{\\text{total}}(x, y, t) = \\sum_{i=1}^{N} \\eta_i(x, y, t) \\] This equation holds for linear, small-amplitude waves where the superposition principle applies.","title":"Superposition of Multiple Waves"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-by-step-solution","text":"","title":"Step-by-Step Solution"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-1-choose-a-regular-polygon","text":"We choose a square \u2014 a regular polygon with four equal sides. This symmetric arrangement is ideal for observing rich and predictable interference patterns.","title":"Step 1: Choose a Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-2-position-the-sources","text":"The point sources are placed at the vertices of a square centered at the origin. If \\(R\\) is the radius of the circumscribed circle, the coordinates are given by: \\[ (x_i, y_i) = (R \\cos \\theta_i, R \\sin \\theta_i),\\quad \\theta_i = \\frac{2\\pi i}{N},\\ i = 0,1,...,N-1 \\] Where \\(R = 1.5\\) and \\(N = 4\\) .","title":"Step 2: Position the Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#step-3-python-simulation-and-visualization","text":"We implement a Python simulation to verify this: You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"Step 3: Python Simulation and Visualization"},{"location":"1%20Physics/3%20Waves/Problem_1/#interpretation-and-analysis","text":"Constructive Interference : Regions where wave crests align \u2014 resulting in high amplitude. Destructive Interference : Locations where crests meet troughs \u2014 resulting in cancellation. Symmetry : The square configuration creates symmetric cross-like wavefronts. Wave Nodes and Antinodes : These emerge clearly and represent points of zero and maximum displacement.","title":"Interpretation and Analysis"},{"location":"1%20Physics/3%20Waves/Problem_1/#real-world-relevance","text":"Acoustics : Speaker arrays and concert hall acoustics leverage interference. Optics : Interference explains diffraction and the working of interferometers. Engineering : Structural vibrations and modal patterns are analyzed using interference.","title":"Real-World Relevance"},{"location":"1%20Physics/3%20Waves/Problem_1/#conclusion","text":"This simulation confirms the emergence of structured interference patterns from four coherent point sources arranged in a square. The resulting patterns showcase fundamental wave phenomena and help bridge theoretical physics with real-world systems.","title":"Conclusion"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1: Simulating the Effects of the Lorentz Force Motivation The Lorentz force governs the behavior of charged particles in electric and magnetic fields: \\[ \\vec{F} = q \\vec{E} + q\\vec{v} \\times \\vec{B} \\] This principle is foundational in understanding phenomena such as particle accelerators, mass spectrometry, plasma confinement, and auroras. Simulating the motion of particles under various electromagnetic conditions enables practical comprehension of their trajectories and interactions. 1. Applications of Lorentz Force Real-World Relevance Cyclotrons : Employ time-varying electric fields and static magnetic fields to accelerate charged particles. Mass Spectrometers : Use magnetic fields to bend the paths of ions for mass analysis. Tokamaks : Utilize magnetic confinement to control high-temperature plasmas in nuclear fusion experiments. Auroras : Caused by solar particles spiraling along Earth\u2019s magnetic field lines into the atmosphere. Role of Fields Electric Field ( \\(\\vec{E}\\) ) : Induces linear acceleration. Magnetic Field ( \\(\\vec{B}\\) ) : Produces circular or helical motion. Crossed Fields ( \\(\\vec{E} \\perp \\vec{B}\\) ) : Lead to \\(\\vec{E} \\times \\vec{B}\\) drift \u2014 a critical motion in plasma physics. 2. Equations and Simulated Scenarios The motion of a charged particle with mass \\(m\\) and charge \\(q\\) is described by: \\[ \\vec{a} = \\frac{d\\vec{v}}{dt} = \\frac{q}{m}(\\vec{E} + \\vec{v} \\times \\vec{B}) \\] We solve these equations using the Runge-Kutta 4th Order Method for three distinct cases: Uniform Magnetic Field : \\(\\vec{B}\\) along \\(z\\) , \\(\\vec{E}=0\\) \u2192 Expect circular or helical motion. Crossed Fields : \\(\\vec{E}\\) along \\(x\\) , \\(\\vec{B}\\) along \\(z\\) \u2192 Expect \\(\\vec{E} \\times \\vec{B}\\) drift. Combined \\(\\vec{E}\\) and \\(\\vec{B}\\) : Expect helical motion with linear acceleration. 3. Parameters and Analysis Electric Field Magnitude : Alters linear acceleration. Magnetic Field Strength : Changes curvature (Larmor radius). Initial Velocity : Determines orbit shape (circular vs helical). Particle Mass and Charge : Influence acceleration scale and trajectory direction. Larmor Radius For perpendicular velocity \\(v_\\perp\\) : \\[ R_L = \\frac{mv_\\perp}{qB} \\] 4. Visualization Goals Expected Simulations Circular path under \\(\\vec{B}\\) alone. Lateral drift in crossed \\(\\vec{E}\\) and \\(\\vec{B}\\) fields. Helical expansion when \\(\\vec{E}\\) and \\(\\vec{B}\\) fields coexist. These animations reveal the dynamic behavior of particles under realistic electromagnetic conditions. Conclusion Understanding the Lorentz force and its effects is essential in electromagnetism and applications like particle confinement and space physics. The provided simulations replicate these scenarios and aid in grasping the underlying physics through visual and quantitative analysis. You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"Problem 1: Simulating the Effects of the Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1-simulating-the-effects-of-the-lorentz-force","text":"","title":"Problem 1: Simulating the Effects of the Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#motivation","text":"The Lorentz force governs the behavior of charged particles in electric and magnetic fields: \\[ \\vec{F} = q \\vec{E} + q\\vec{v} \\times \\vec{B} \\] This principle is foundational in understanding phenomena such as particle accelerators, mass spectrometry, plasma confinement, and auroras. Simulating the motion of particles under various electromagnetic conditions enables practical comprehension of their trajectories and interactions.","title":"Motivation"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#1-applications-of-lorentz-force","text":"","title":"1. Applications of Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#real-world-relevance","text":"Cyclotrons : Employ time-varying electric fields and static magnetic fields to accelerate charged particles. Mass Spectrometers : Use magnetic fields to bend the paths of ions for mass analysis. Tokamaks : Utilize magnetic confinement to control high-temperature plasmas in nuclear fusion experiments. Auroras : Caused by solar particles spiraling along Earth\u2019s magnetic field lines into the atmosphere.","title":"Real-World Relevance"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#role-of-fields","text":"Electric Field ( \\(\\vec{E}\\) ) : Induces linear acceleration. Magnetic Field ( \\(\\vec{B}\\) ) : Produces circular or helical motion. Crossed Fields ( \\(\\vec{E} \\perp \\vec{B}\\) ) : Lead to \\(\\vec{E} \\times \\vec{B}\\) drift \u2014 a critical motion in plasma physics.","title":"Role of Fields"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#2-equations-and-simulated-scenarios","text":"The motion of a charged particle with mass \\(m\\) and charge \\(q\\) is described by: \\[ \\vec{a} = \\frac{d\\vec{v}}{dt} = \\frac{q}{m}(\\vec{E} + \\vec{v} \\times \\vec{B}) \\] We solve these equations using the Runge-Kutta 4th Order Method for three distinct cases: Uniform Magnetic Field : \\(\\vec{B}\\) along \\(z\\) , \\(\\vec{E}=0\\) \u2192 Expect circular or helical motion. Crossed Fields : \\(\\vec{E}\\) along \\(x\\) , \\(\\vec{B}\\) along \\(z\\) \u2192 Expect \\(\\vec{E} \\times \\vec{B}\\) drift. Combined \\(\\vec{E}\\) and \\(\\vec{B}\\) : Expect helical motion with linear acceleration.","title":"2. Equations and Simulated Scenarios"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#3-parameters-and-analysis","text":"Electric Field Magnitude : Alters linear acceleration. Magnetic Field Strength : Changes curvature (Larmor radius). Initial Velocity : Determines orbit shape (circular vs helical). Particle Mass and Charge : Influence acceleration scale and trajectory direction.","title":"3. Parameters and Analysis"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#larmor-radius","text":"For perpendicular velocity \\(v_\\perp\\) : \\[ R_L = \\frac{mv_\\perp}{qB} \\]","title":"Larmor Radius"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#4-visualization-goals","text":"","title":"4. Visualization Goals"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#expected-simulations","text":"Circular path under \\(\\vec{B}\\) alone. Lateral drift in crossed \\(\\vec{E}\\) and \\(\\vec{B}\\) fields. Helical expansion when \\(\\vec{E}\\) and \\(\\vec{B}\\) fields coexist. These animations reveal the dynamic behavior of particles under realistic electromagnetic conditions.","title":"Expected Simulations"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#conclusion","text":"Understanding the Lorentz force and its effects is essential in electromagnetism and applications like particle confinement and space physics. The provided simulations replicate these scenarios and aid in grasping the underlying physics through visual and quantitative analysis. You can run the simulation in Google Colab by clicking the link below: \u25b6 Run in Google Colab","title":"Conclusion"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1 Exploring the Central Limit Theorem through simulations 1. Simulating Population Distributions 1. Uniform Distribution \\[ X \\sim \\text{Uniform}(a, b) \\] 2. PDF: \\[ f_X(x) = \\frac{1}{b - a}, \\quad a \\leq x \\leq b \\] 3. Mean: \\[ \\mu = \\frac{a + b}{2} \\] 4. Variance: \\[ \\sigma^2 = \\frac{(b - a)^2}{12} \\] 5. Exponential Distribution \\[ X \\sim \\text{Exponential}(\\lambda) \\] 6. PDF: \\[ f_X(x) = \\lambda e^{-\\lambda x}, \\quad x \\geq 0 \\] 7. Mean: \\[ \\mu = \\frac{1}{\\lambda} \\] 8. Variance: \\[ \\sigma^2 = \\frac{1}{\\lambda^2} \\] 9. Binomial Distribution \\[ X \\sim \\text{Binomial}(n, p) \\] 10. PMF: \\[ P(X = k) = \\binom{n}{k} p^k (1 - p)^{n - k}, \\quad k = 0, 1, \\ldots, n \\] 11. Mean: \\[ \\mu = n p \\] 12. Variance: \\[ \\sigma^2 = n p (1 - p) \\] For each distribution, generate a large \"population\" sample of size \\( N = 100,000 \\) . 2. Sampling & Visualization Draw Random Samples For each population, and for each sample size \\(n\\in\\{5,10,30,50\\}\\) : Repeat \\(M = 1000\\) times: Take a random sample \\(X_1, X_2, \\dots, X_n\\) . Compute the sample mean \\( \\(\\bar{X} = \\frac{1}{n}\\sum_{i=1}^n X_i.\\) \\) Collect the \\(M\\) values of \\(\\bar{X}\\) to form the sampling distribution of the mean. Plot Histograms For each \\(n\\) , plot a histogram of the \\(M\\) sample means. Overlay the Normal PDF with parameters \\( \\(\\mu_{\\bar X} = \\mu,\\quad \\sigma_{\\bar X} = \\frac{\\sigma}{\\sqrt{n}}.\\) \\) Observe how, as \\(n\\) increases, the histogram approaches \\( \\(\\bar{X} \\ \\xrightarrow{d}\\ \\mathcal{N}\\!\\Bigl(\\mu,\\,\\tfrac{\\sigma^2}{n}\\Bigr).\\) \\) 3. Parameter Exploration Shape of Original Distribution Skewed distributions (e.g., Exponential) require larger \\(n\\) before the sampling distribution appears Normal. Symmetric distributions (e.g., Uniform) converge more quickly. Effect of Variance A larger population variance \\(\\sigma^2\\) yields a wider sampling distribution: \\( \\(\\mathrm{Var}(\\bar{X}) = \\frac{\\sigma^2}{n}.\\) \\) Doubling \\(\\sigma^2\\) doubles the spread of \\(\\bar{X}\\) , but increasing \\(n\\) reduces spread by \\(1/n\\) . Rate of Convergence For distributions with finite higher moments, the Berry\u2013Esseen theorem gives a bound on the convergence rate: \\( \\(\\sup_x \\Bigl| F_n(x) - \\Phi(x)\\Bigr| \\le \\frac{C\\,\\rho}{\\sigma^3\\sqrt{n}},\\) \\) where \\(\\rho = \\mathbb{E}\\!\\bigl|X - \\mu\\bigr|^3\\) and \\(C\\) is a constant. 4. Practical Applications of the CLT Estimating Population Parameters Confidence intervals for a population mean use \\( \\(\\bar{X} \\pm z_{\\,\\alpha/2}\\,\\frac{\\sigma}{\\sqrt{n}}.\\) \\) Quality Control in Manufacturing Monitor sample means of product dimensions to detect shifts from target: $$ \\bar{X} \\sim \\mathcal{N}!\\Bigl(\\mu_0,\\tfrac{\\sigma^2}{n}\\Bigr). $$ Financial Modeling Aggregated returns over many assets or time intervals often assumed Normally distributed: $$ R = \\sum_{i=1}^n r_i,\\quad r_i\\sim\\text{IID}, $$ so by CLT, $$ R \\approx \\mathcal{N}!\\bigl(n\\mu,\\;n\\sigma^2\\bigr). $$ Animation","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#exploring-the-central-limit-theorem-through-simulations","text":"","title":"Exploring the Central Limit Theorem through simulations"},{"location":"1%20Physics/6%20Statistics/Problem_1/#1-simulating-population-distributions","text":"","title":"1. Simulating Population Distributions"},{"location":"1%20Physics/6%20Statistics/Problem_1/#1-uniform-distribution","text":"\\[ X \\sim \\text{Uniform}(a, b) \\]","title":"1. Uniform Distribution"},{"location":"1%20Physics/6%20Statistics/Problem_1/#2-pdf","text":"\\[ f_X(x) = \\frac{1}{b - a}, \\quad a \\leq x \\leq b \\]","title":"2. PDF:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#3-mean","text":"\\[ \\mu = \\frac{a + b}{2} \\]","title":"3. Mean:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#4-variance","text":"\\[ \\sigma^2 = \\frac{(b - a)^2}{12} \\]","title":"4. Variance:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#5-exponential-distribution","text":"\\[ X \\sim \\text{Exponential}(\\lambda) \\]","title":"5. Exponential Distribution"},{"location":"1%20Physics/6%20Statistics/Problem_1/#6-pdf","text":"\\[ f_X(x) = \\lambda e^{-\\lambda x}, \\quad x \\geq 0 \\]","title":"6. PDF:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#7-mean","text":"\\[ \\mu = \\frac{1}{\\lambda} \\]","title":"7. Mean:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#8-variance","text":"\\[ \\sigma^2 = \\frac{1}{\\lambda^2} \\]","title":"8. Variance:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#9-binomial-distribution","text":"\\[ X \\sim \\text{Binomial}(n, p) \\]","title":"9. Binomial Distribution"},{"location":"1%20Physics/6%20Statistics/Problem_1/#10-pmf","text":"\\[ P(X = k) = \\binom{n}{k} p^k (1 - p)^{n - k}, \\quad k = 0, 1, \\ldots, n \\]","title":"10. PMF:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#11-mean","text":"\\[ \\mu = n p \\]","title":"11. Mean:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#12-variance","text":"\\[ \\sigma^2 = n p (1 - p) \\] For each distribution, generate a large \"population\" sample of size \\( N = 100,000 \\) .","title":"12. Variance:"},{"location":"1%20Physics/6%20Statistics/Problem_1/#2-sampling-visualization","text":"Draw Random Samples For each population, and for each sample size \\(n\\in\\{5,10,30,50\\}\\) : Repeat \\(M = 1000\\) times: Take a random sample \\(X_1, X_2, \\dots, X_n\\) . Compute the sample mean \\( \\(\\bar{X} = \\frac{1}{n}\\sum_{i=1}^n X_i.\\) \\) Collect the \\(M\\) values of \\(\\bar{X}\\) to form the sampling distribution of the mean. Plot Histograms For each \\(n\\) , plot a histogram of the \\(M\\) sample means. Overlay the Normal PDF with parameters \\( \\(\\mu_{\\bar X} = \\mu,\\quad \\sigma_{\\bar X} = \\frac{\\sigma}{\\sqrt{n}}.\\) \\) Observe how, as \\(n\\) increases, the histogram approaches \\( \\(\\bar{X} \\ \\xrightarrow{d}\\ \\mathcal{N}\\!\\Bigl(\\mu,\\,\\tfrac{\\sigma^2}{n}\\Bigr).\\) \\)","title":"2. Sampling &amp; Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_1/#3-parameter-exploration","text":"Shape of Original Distribution Skewed distributions (e.g., Exponential) require larger \\(n\\) before the sampling distribution appears Normal. Symmetric distributions (e.g., Uniform) converge more quickly. Effect of Variance A larger population variance \\(\\sigma^2\\) yields a wider sampling distribution: \\( \\(\\mathrm{Var}(\\bar{X}) = \\frac{\\sigma^2}{n}.\\) \\) Doubling \\(\\sigma^2\\) doubles the spread of \\(\\bar{X}\\) , but increasing \\(n\\) reduces spread by \\(1/n\\) . Rate of Convergence For distributions with finite higher moments, the Berry\u2013Esseen theorem gives a bound on the convergence rate: \\( \\(\\sup_x \\Bigl| F_n(x) - \\Phi(x)\\Bigr| \\le \\frac{C\\,\\rho}{\\sigma^3\\sqrt{n}},\\) \\) where \\(\\rho = \\mathbb{E}\\!\\bigl|X - \\mu\\bigr|^3\\) and \\(C\\) is a constant.","title":"3. Parameter Exploration"},{"location":"1%20Physics/6%20Statistics/Problem_1/#4-practical-applications-of-the-clt","text":"Estimating Population Parameters Confidence intervals for a population mean use \\( \\(\\bar{X} \\pm z_{\\,\\alpha/2}\\,\\frac{\\sigma}{\\sqrt{n}}.\\) \\) Quality Control in Manufacturing Monitor sample means of product dimensions to detect shifts from target: $$ \\bar{X} \\sim \\mathcal{N}!\\Bigl(\\mu_0,\\tfrac{\\sigma^2}{n}\\Bigr). $$ Financial Modeling Aggregated returns over many assets or time intervals often assumed Normally distributed: $$ R = \\sum_{i=1}^n r_i,\\quad r_i\\sim\\text{IID}, $$ so by CLT, $$ R \\approx \\mathcal{N}!\\bigl(n\\mu,\\;n\\sigma^2\\bigr). $$","title":"4. Practical Applications of the CLT"},{"location":"1%20Physics/6%20Statistics/Problem_1/#animation","text":"","title":"Animation"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2 Estimating \\(\\pi\\) using Monte Carlo Methods 1. Theoretical Foundation To estimate \\(\\pi\\) using random points, consider a unit circle inscribed in a square. The circle has a radius \\(r = 1\\) , and the square spans from \\(-1\\) to \\(1\\) in both \\(x\\) and \\(y\\) directions. The area of the unit circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi \\] The area of the square is: \\[ A_{\\text{square}} = (2r)^2 = 4 \\] If we randomly generate points uniformly within the square, the probability that a point lies inside the circle is: \\[ P = \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\] Solving for \\(\\pi\\) gives: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N_{\\text{total}}} \\] 2. Simulation Generate \\(N\\) random points \\((x, y)\\) in the square \\([-1, 1] \\times [-1, 1]\\) . Count how many fall inside the unit circle (i.e., those satisfying \\(x^2 + y^2 \\leq 1\\) ). Estimate \\(\\pi\\) using: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N_{\\text{total}}} \\] 3. Visualization A plot can show: Points inside the circle in blue Points outside the circle in red The unit circle boundary This visually demonstrates how random sampling approximates the circle's area. 4. Analysis As \\(N \\rightarrow \\infty\\) , the estimate of \\(\\pi\\) converges to the true value. The convergence rate is \\(O(1/\\sqrt{N})\\) , typical for Monte Carlo methods. Accuracy increases slowly, so large numbers of samples are needed for high precision. Monte Carlo integration is simple but computationally inefficient compared to analytical methods. Part 2: Estimating \\(\\pi\\) Using Buffon\u2019s Needle 1. Theoretical Foundation Buffon's Needle is a probability problem: Drop a needle of length \\(L\\) onto a plane with parallel lines spaced a distance \\(d\\) apart ( \\(L \\leq d\\) ). The probability that the needle crosses a line is: \\[ P = \\frac{2L}{\\pi d} \\] Rearranging to estimate \\(\\pi\\) : \\[ \\pi \\approx \\frac{2L \\cdot N_{\\text{total}}}{d \\cdot N_{\\text{cross}}} \\] Where: - \\(N_{\\text{total}}\\) = total number of needle drops - \\(N_{\\text{cross}}\\) = number of times the needle crosses a line 2. Simulation Randomly simulate dropping a needle: Random angle \\(\\theta \\in [0, \\pi]\\) Random distance from center to nearest line \\(x \\in [0, d/2]\\) The needle crosses a line if: \\[ x \\leq \\frac{L}{2} \\sin(\\theta) \\] Count the number of crossings and estimate \\(\\pi\\) : \\[ \\pi \\approx \\frac{2L \\cdot N_{\\text{total}}}{d \\cdot N_{\\text{cross}}} \\] 3. Visualization A diagram should show: Horizontal parallel lines spaced at distance \\(d\\) Needles randomly placed, with crossing ones in a distinct color This illustrates the relationship between geometry and probability 4. Analysis Like the circle method, this converges slowly: \\(O(1/\\sqrt{N})\\) More complex to implement due to trigonometric calculations It offers historical and theoretical interest but is less practical for accurate estimation of \\(\\pi\\) For small numbers of trials, the result is very noisy Comparison of Methods Method Convergence Rate Complexity Practicality Monte Carlo Circle \\(O(1/\\sqrt{N})\\) Easy High Buffon\u2019s Needle \\(O(1/\\sqrt{N})\\) Moderate Moderate Animation 1 Animation 2 Using Buffon\u2019s Needle","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#estimating-pi-using-monte-carlo-methods","text":"","title":"Estimating \\(\\pi\\) using Monte Carlo Methods"},{"location":"1%20Physics/6%20Statistics/Problem_2/#1-theoretical-foundation","text":"To estimate \\(\\pi\\) using random points, consider a unit circle inscribed in a square. The circle has a radius \\(r = 1\\) , and the square spans from \\(-1\\) to \\(1\\) in both \\(x\\) and \\(y\\) directions. The area of the unit circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi \\] The area of the square is: \\[ A_{\\text{square}} = (2r)^2 = 4 \\] If we randomly generate points uniformly within the square, the probability that a point lies inside the circle is: \\[ P = \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\] Solving for \\(\\pi\\) gives: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N_{\\text{total}}} \\]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#2-simulation","text":"Generate \\(N\\) random points \\((x, y)\\) in the square \\([-1, 1] \\times [-1, 1]\\) . Count how many fall inside the unit circle (i.e., those satisfying \\(x^2 + y^2 \\leq 1\\) ). Estimate \\(\\pi\\) using: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N_{\\text{total}}} \\]","title":"2. Simulation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#3-visualization","text":"A plot can show: Points inside the circle in blue Points outside the circle in red The unit circle boundary This visually demonstrates how random sampling approximates the circle's area.","title":"3. Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_2/#4-analysis","text":"As \\(N \\rightarrow \\infty\\) , the estimate of \\(\\pi\\) converges to the true value. The convergence rate is \\(O(1/\\sqrt{N})\\) , typical for Monte Carlo methods. Accuracy increases slowly, so large numbers of samples are needed for high precision. Monte Carlo integration is simple but computationally inefficient compared to analytical methods.","title":"4. Analysis"},{"location":"1%20Physics/6%20Statistics/Problem_2/#part-2-estimating-pi-using-buffons-needle","text":"","title":"Part 2: Estimating \\(\\pi\\) Using Buffon\u2019s Needle"},{"location":"1%20Physics/6%20Statistics/Problem_2/#1-theoretical-foundation_1","text":"Buffon's Needle is a probability problem: Drop a needle of length \\(L\\) onto a plane with parallel lines spaced a distance \\(d\\) apart ( \\(L \\leq d\\) ). The probability that the needle crosses a line is: \\[ P = \\frac{2L}{\\pi d} \\] Rearranging to estimate \\(\\pi\\) : \\[ \\pi \\approx \\frac{2L \\cdot N_{\\text{total}}}{d \\cdot N_{\\text{cross}}} \\] Where: - \\(N_{\\text{total}}\\) = total number of needle drops - \\(N_{\\text{cross}}\\) = number of times the needle crosses a line","title":"1. Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#2-simulation_1","text":"Randomly simulate dropping a needle: Random angle \\(\\theta \\in [0, \\pi]\\) Random distance from center to nearest line \\(x \\in [0, d/2]\\) The needle crosses a line if: \\[ x \\leq \\frac{L}{2} \\sin(\\theta) \\] Count the number of crossings and estimate \\(\\pi\\) : \\[ \\pi \\approx \\frac{2L \\cdot N_{\\text{total}}}{d \\cdot N_{\\text{cross}}} \\]","title":"2. Simulation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#3-visualization_1","text":"A diagram should show: Horizontal parallel lines spaced at distance \\(d\\) Needles randomly placed, with crossing ones in a distinct color This illustrates the relationship between geometry and probability","title":"3. Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_2/#4-analysis_1","text":"Like the circle method, this converges slowly: \\(O(1/\\sqrt{N})\\) More complex to implement due to trigonometric calculations It offers historical and theoretical interest but is less practical for accurate estimation of \\(\\pi\\) For small numbers of trials, the result is very noisy","title":"4. Analysis"},{"location":"1%20Physics/6%20Statistics/Problem_2/#comparison-of-methods","text":"Method Convergence Rate Complexity Practicality Monte Carlo Circle \\(O(1/\\sqrt{N})\\) Easy High Buffon\u2019s Needle \\(O(1/\\sqrt{N})\\) Moderate Moderate","title":"Comparison of Methods"},{"location":"1%20Physics/6%20Statistics/Problem_2/#animation-1","text":"","title":"Animation 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/#animation-2","text":"","title":"Animation 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#using-buffons-needle","text":"","title":"Using Buffon\u2019s Needle"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1 Measuring Earth's Gravitational Acceleration with a Pendulum This experiment estimates the acceleration due to gravity \\(g\\) using a simple pendulum by analyzing the period of its oscillation and the pendulum's length. Pendulum Measurement Report Materials and Tools Necklace (used as pendulum string) Keychain or small pendant as mass Ruler (uncertainty: \u00b11 mm) Smartphone stopwatch Pendulum Length Measured Length: \\(L = 0.280\\ \\text{m}\\) Uncertainty: \\(\\Delta L = \\pm 0.001\\ \\text{m}\\) Time Measurements for 10 Oscillations Trial Time (s) 1 11.59 2 11.23 3 11.34 4 11.56 5 11.67 6 11.56 7 11.58 8 11.27 9 11.46 10 11.34 Calculations Mean Time for 10 Oscillations \\[ \\bar{T}_{10} = \\frac{\\sum T_i}{10} = \\frac{114.6}{10} = 11.46\\ \\text{s} \\] Mean Time for 1 Oscillation \\[ \\bar{T} = \\frac{\\bar{T}_{10}}{10} = 1.146\\ \\text{s} \\] Experimental Value of Gravitational Acceleration Using: $$ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} $$ Substitute: $$ g = \\frac{4\\pi^2 \\cdot 0.280}{(1.146)^2} = 8.97\\ \\text{m/s}^2 $$ Uncertainty and Error Time uncertainty (range method): $$ \\Delta T_{10} = \\frac{11.67 - 11.23}{2} = 0.22\\ \\text{s} \\Rightarrow \\Delta T = \\frac{0.22}{10} = 0.022\\ \\text{s} $$ Propagated uncertainty: $$ \\Delta g = g \\cdot \\sqrt{ \\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\cdot\\frac{\\Delta T}{T}\\right)^2 } $$ Conclusion The experimental value \\(g = 8.97\\ \\text{m/s}^2\\) is reasonably close to the standard \\(g = 9.81\\ \\text{m/s}^2\\) , with an error margin of approximately 8.6%. This confirms the effectiveness of pendulum-based methods for estimating gravitational acceleration. Experimental Setup and Visuals Pendulum Swing Simulation Simulated side-view of the pendulum using your measured length ( \\(0.28\\ \\text{m}\\) ): Oscillation Timer (10 Periods) Each bar represents one full swing, aligned with your stopwatch readings: Theoretical Background Assuming small-angle approximation: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} \\] Visual Data Analysis Graph: Measured \\(g\\) vs standard \\(g\\) Here is the comparison image showing your measured gravitational acceleration (8.97\u202fm/s\u00b2) versus the standard value (9.81\u202fm/s\u00b2): Discussion Deviations from \\(g_{\\text{standard}} = 9.81\\ \\text{m/s}^2\\) may result from: Slight deviation in initial angle from ideal small-angle assumption Timing human reaction delay Air resistance and friction at pivot point Conclusion This experiment demonstrated a reliable method of estimating Earth's gravitational acceleration with household tools. Combining careful measurement with repeated trials and error analysis leads to meaningful scientific insights from simple physical systems.","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#measuring-earths-gravitational-acceleration-with-a-pendulum","text":"This experiment estimates the acceleration due to gravity \\(g\\) using a simple pendulum by analyzing the period of its oscillation and the pendulum's length.","title":"Measuring Earth's Gravitational Acceleration with a Pendulum"},{"location":"1%20Physics/7%20Measurements/Problem_1/#pendulum-measurement-report","text":"","title":"Pendulum Measurement Report"},{"location":"1%20Physics/7%20Measurements/Problem_1/#materials-and-tools","text":"Necklace (used as pendulum string) Keychain or small pendant as mass Ruler (uncertainty: \u00b11 mm) Smartphone stopwatch","title":"Materials and Tools"},{"location":"1%20Physics/7%20Measurements/Problem_1/#pendulum-length","text":"Measured Length: \\(L = 0.280\\ \\text{m}\\) Uncertainty: \\(\\Delta L = \\pm 0.001\\ \\text{m}\\)","title":"Pendulum Length"},{"location":"1%20Physics/7%20Measurements/Problem_1/#time-measurements-for-10-oscillations","text":"Trial Time (s) 1 11.59 2 11.23 3 11.34 4 11.56 5 11.67 6 11.56 7 11.58 8 11.27 9 11.46 10 11.34","title":"Time Measurements for 10 Oscillations"},{"location":"1%20Physics/7%20Measurements/Problem_1/#calculations","text":"","title":"Calculations"},{"location":"1%20Physics/7%20Measurements/Problem_1/#mean-time-for-10-oscillations","text":"\\[ \\bar{T}_{10} = \\frac{\\sum T_i}{10} = \\frac{114.6}{10} = 11.46\\ \\text{s} \\]","title":"Mean Time for 10 Oscillations"},{"location":"1%20Physics/7%20Measurements/Problem_1/#mean-time-for-1-oscillation","text":"\\[ \\bar{T} = \\frac{\\bar{T}_{10}}{10} = 1.146\\ \\text{s} \\]","title":"Mean Time for 1 Oscillation"},{"location":"1%20Physics/7%20Measurements/Problem_1/#experimental-value-of-gravitational-acceleration","text":"Using: $$ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} $$ Substitute: $$ g = \\frac{4\\pi^2 \\cdot 0.280}{(1.146)^2} = 8.97\\ \\text{m/s}^2 $$","title":"Experimental Value of Gravitational Acceleration"},{"location":"1%20Physics/7%20Measurements/Problem_1/#uncertainty-and-error","text":"Time uncertainty (range method): $$ \\Delta T_{10} = \\frac{11.67 - 11.23}{2} = 0.22\\ \\text{s} \\Rightarrow \\Delta T = \\frac{0.22}{10} = 0.022\\ \\text{s} $$ Propagated uncertainty: $$ \\Delta g = g \\cdot \\sqrt{ \\left(\\frac{\\Delta L}{L}\\right)^2 + \\left(2\\cdot\\frac{\\Delta T}{T}\\right)^2 } $$","title":"Uncertainty and Error"},{"location":"1%20Physics/7%20Measurements/Problem_1/#conclusion","text":"The experimental value \\(g = 8.97\\ \\text{m/s}^2\\) is reasonably close to the standard \\(g = 9.81\\ \\text{m/s}^2\\) , with an error margin of approximately 8.6%. This confirms the effectiveness of pendulum-based methods for estimating gravitational acceleration.","title":"Conclusion"},{"location":"1%20Physics/7%20Measurements/Problem_1/#experimental-setup-and-visuals","text":"","title":"Experimental Setup and Visuals"},{"location":"1%20Physics/7%20Measurements/Problem_1/#pendulum-swing-simulation","text":"Simulated side-view of the pendulum using your measured length ( \\(0.28\\ \\text{m}\\) ):","title":"Pendulum Swing Simulation"},{"location":"1%20Physics/7%20Measurements/Problem_1/#oscillation-timer-10-periods","text":"Each bar represents one full swing, aligned with your stopwatch readings:","title":"Oscillation Timer (10 Periods)"},{"location":"1%20Physics/7%20Measurements/Problem_1/#theoretical-background","text":"Assuming small-angle approximation: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} \\]","title":"Theoretical Background"},{"location":"1%20Physics/7%20Measurements/Problem_1/#visual-data-analysis","text":"","title":"Visual Data Analysis"},{"location":"1%20Physics/7%20Measurements/Problem_1/#graph-measured-g-vs-standard-g","text":"Here is the comparison image showing your measured gravitational acceleration (8.97\u202fm/s\u00b2) versus the standard value (9.81\u202fm/s\u00b2):","title":"Graph: Measured \\(g\\) vs standard \\(g\\)"},{"location":"1%20Physics/7%20Measurements/Problem_1/#discussion","text":"Deviations from \\(g_{\\text{standard}} = 9.81\\ \\text{m/s}^2\\) may result from: Slight deviation in initial angle from ideal small-angle assumption Timing human reaction delay Air resistance and friction at pivot point","title":"Discussion"},{"location":"1%20Physics/7%20Measurements/Problem_1/#conclusion_1","text":"This experiment demonstrated a reliable method of estimating Earth's gravitational acceleration with household tools. Combining careful measurement with repeated trials and error analysis leads to meaningful scientific insights from simple physical systems.","title":"Conclusion"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}